options:  
 docker: true
 size: 2x

definitions:
  steps:
   - step: &build-image
         name: Build Docker image
         image: node:12.16.0-alpine
         script: 
           - npm ci --silent
           - npm install react-scripts@3.4.1 -g --silent
           - cp .env.production .env
           - CI= npm run build
           - docker build -t safedesk-web .
           - docker save --output tmp-image.docker safedesk-web
         artifacts:
           - tmp-image.docker
   - step: &push-gcp
      name: Push to GCP registry
      image: google/cloud-sdk:alpine
      script:
           - docker load --input ./tmp-image.docker
           - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
           - gcloud auth activate-service-account --key-file gcloud-api-key.json
           - gcloud config set project $GCLOUD_PROJECT
           - export TAG=$(echo "$BITBUCKET_TAG" | sed -e "s/v//g")
           - export SUFFIX=$([[ ! -z "$TAG" ]] && echo ":$TAG" || echo "")
           - echo ${SUFFIX}
           - export IMAGE_NAME=gcr.io/$GCLOUD_PROJECT/safedesk-web${SUFFIX}
           - docker tag safedesk-web ${IMAGE_NAME}
           - docker tag  safedesk-web ${IMAGE_NAME}:$BITBUCKET_COMMIT
           - cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin https://gcr.io
           - docker push ${IMAGE_NAME}
           
   - step: &deploy-gcp
          name: Deploy to Kubernetes
          image: google/cloud-sdk:alpine
          script:
            - echo $KUBECONFIG | base64 -d > kubeconfig.yml
            - cat kubeconfig.yml
            - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud components install kubectl
            - which gcloud
            - kubectl --kubeconfig=kubeconfig.yml set image deployment/safedesk-web safedesk-web-1=gcr.io/savvy-scion-244419/safedesk-web:$BITBUCKET_COMMIT --record --namespace=default
pipelines: 
  tags:
    v*:
      - step: *build-image
      - step: *push-gcp
      - step: *deploy-gcp
  branches:
     master:
       - step: *build-image
       - step: *push-gcp
       - step: *deploy-gcp
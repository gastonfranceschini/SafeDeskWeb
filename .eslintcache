[{"C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js":"1","C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js":"2","C:\\Repo\\SafeDeskWeb\\src\\apis\\ReportesAPI.js":"3","C:\\Repo\\SafeDeskWeb\\src\\index.js":"4","C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js":"5","C:\\Repo\\SafeDeskWeb\\src\\components\\Sidebar2.js":"6","C:\\Repo\\SafeDeskWeb\\src\\App.js":"7","C:\\Repo\\SafeDeskWeb\\src\\components\\Diagnostico.js":"8","C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js":"9","C:\\Repo\\SafeDeskWeb\\src\\components\\Home.js":"10","C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js":"11","C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js":"12","C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js":"13","C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js":"14","C:\\Repo\\SafeDeskWeb\\src\\apis\\DiagnosticosAPI.js":"15"},{"size":4319,"mtime":1607379781894,"results":"16","hashOfConfig":"17"},{"size":17636,"mtime":1607914648318,"results":"18","hashOfConfig":"17"},{"size":855,"mtime":1607915171900,"results":"19","hashOfConfig":"17"},{"size":626,"mtime":1606955407104,"results":"20","hashOfConfig":"17"},{"size":15132,"mtime":1607478737619,"results":"21","hashOfConfig":"17"},{"size":3626,"mtime":1608093120259,"results":"22","hashOfConfig":"17"},{"size":1239,"mtime":1607382020898,"results":"23","hashOfConfig":"17"},{"size":7369,"mtime":1607382020902,"results":"24","hashOfConfig":"17"},{"size":3427,"mtime":1608091037762,"results":"25","hashOfConfig":"17"},{"size":1235,"mtime":1607473747484,"results":"26","hashOfConfig":"17"},{"size":770,"mtime":1607052260009,"results":"27","hashOfConfig":"17"},{"size":3543,"mtime":1608093230564,"results":"28","hashOfConfig":"17"},{"size":1315,"mtime":1607438976349,"results":"29","hashOfConfig":"17"},{"size":4276,"mtime":1608095143950,"results":"30","hashOfConfig":"17"},{"size":853,"mtime":1607351203045,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1y9nia1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js",["71","72","73","74","75","76","77"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from '../shared/Header'\r\nimport { useFormik } from \"formik\";\r\nimport { FormControl, TextField, InputLabel } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { setToken, setUser, getUser, getToken } from \"../utils/auth-helper\";\r\nimport * as gVar from \"../utils/properties\";\r\nimport Home from \"./Home\";\r\nimport * as Auth from \"../apis/AuthAPI\";\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst Login = () => {\r\n\r\n  const alert = useAlert();\r\n\r\n  \r\n  const [cargando, setCargando] = useState(false)\r\n  const [logged, setLogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (getToken()) \r\n    {\r\n      setLogged(true);\r\n    }\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      marginTop: theme.spacing(6),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const validation = Yup.object().shape({\r\n    dni: Yup.string()\r\n    .min(3, \"El dni debe contener 3 caracteres o más\")\r\n    .required(\"requerido\"),\r\n    password: Yup.string().required(\"requerido\"),\r\n  });\r\n\r\n  const LogIn = (dni,password) => {\r\n    setCargando(true);\r\n\r\n    Auth.loginUser(dni,password)\r\n    .then(response => {\r\n      setToken(response.data.token);\r\n      setUser(response.data);\r\n      setCargando(false);\r\n      alert.show(\"Bienvenido \" +  getUser().Nombre);\r\n      setLogged(true);\r\n    })          \r\n    .catch(function(error) {\r\n\r\n      if (error.response == undefined)\r\n        alert.show(\"\" + error);\r\n      else\r\n        alert.show(\"\" + error.response.data.error);\r\n\r\n      setCargando(false);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      dni: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validation,\r\n    onSubmit: (values) => {\r\n      const { dni, password } = values;\r\n      LogIn(dni,password);\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <Container maxWidth=\"sm\">\r\n          <h1 className='ExpertaText' style={{ fontSize : \"50px\" }}>SAFE DESK</h1>\r\n          <p>Para comenzar ingresá tu DNI y contraseña.</p>\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>DNI</InputLabel>\r\n              <TextField\r\n                className={classes.textField}\r\n                onChange={formik.handleChange}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá tu DNI\"\r\n                //disabled={true}\r\n                id=\"dni\"\r\n                name=\"dni\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.dni}\r\n                error={formik.errors.dni}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Contraseña</InputLabel>\r\n              <TextField\r\n                onChange={formik.handleChange}\r\n                className={classes.textField}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá la contraseña\"\r\n                 type=\"password\"\r\n                //disabled={true}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.password}\r\n                error={formik.errors.password}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              style={{ alignSelf: \"center\" ,textTransform: \"none\"}}\r\n              variant=\"contained\"\r\n              type= 'submit'>Ingresar</Button>\r\n            <Link to=\"/vales\" style={{ textDecoration: \"none\",alignSelf: \"center\" }}>\r\n            </Link>\r\n            <br/>\r\n          </form>\r\n        </Container>\r\n        { logged ? <Redirect to=\"/Home\"/> : null }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;",["78","79"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Header from \"../shared/Header\"\r\nimport Sidebar from \"./Sidebar2\"\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setMinutes, getDay, addDays, formatISO } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport { useAlert } from 'react-alert';\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Zoom,\r\n  } from \"@material-ui/core\";\r\n\r\n  import { getReportes, getReporteDinamico } from '../apis/ReportesAPI';\r\n  import { getEdificios, getPisos, getHoras, saveTurno } from '../apis/TurnosAPI';\r\n  import { getGerencias, getUsuariosDependientes } from '../apis/UsuariosAPI';\r\n  \r\n\r\nconst Reporte = (prop) => {\r\n\r\nconst isWeekday = (date) => {\r\n  const day = getDay(date);\r\n  return day !== 0 && day !== 6;\r\n};\r\n  const [submit, setSubmit] = useState(false);\r\n  const [reportes, setReportes] = useState([]);\r\n  const [feriados, setFeriados] = useState([]);\r\n  const [gerencias, setGerencias] = useState([]);\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [edificios, setEdificios] = useState([]);\r\n  const [pisos, setPisos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [fechaSel, setFechaSel] = useState();\r\n  const [repoSel, setRepoSel] = useState();\r\n  const alert = useAlert();\r\n  const [done, setDone] = useState(false);\r\n\r\n  const [edificiosVisible, setEdificiosVisible] = useState(0);\r\n  const [usuariosVisible, setUsuariosVisible] = useState(0);\r\n  const [fechaVisible, setFechaVisible] = useState(0);\r\n  const [gerenciasVisible, setGerenciasVisible] = useState(0);\r\n  const [pisosVisible, setPisosVisible] = useState(0);\r\n  const [horariosVisible, setHorariosVisible] = useState(0);\r\n\r\n  async function cargarGerencias() {\r\n    const res = await getGerencias();\r\n    const defaultTodos = [{ id : null, Nombre: 'TODOS'}]\r\n    Array.prototype.push.apply(defaultTodos, res.data);\r\n\r\n    if (gerenciasVisible == 1 ) \r\n      setGerencias(defaultTodos);\r\n    else\r\n      setGerencias(res.data);\r\n  }\r\n\r\n  async function cargarUsuarios() {\r\n    const res = await getUsuariosDependientes();\r\n    const defaultTodos = [{ dni : null, nombre: 'TODOS'}]\r\n    Array.prototype.push.apply(defaultTodos, res.data);\r\n\r\n    if (usuariosVisible == 1 ) \r\n      setUsuarios(defaultTodos);\r\n    else\r\n      setUsuarios(res.data);\r\n  }\r\n\r\n  async function cargarEdificios() {\r\n    const res = await getEdificios(\"2099-1-1\");\r\n    const defaultTodos = [{ eID : null, Nombre: 'TODOS', Direccion: '' }]\r\n    Array.prototype.push.apply(defaultTodos, res.data);\r\n    //?\r\n    if (edificiosVisible == 1 ) \r\n      setEdificios(defaultTodos);\r\n    else\r\n      setEdificios(res.data);\r\n  }\r\n\r\n  async function cargarReportes() {\r\n    const res = await getReportes();\r\n    setReportes(res.data);\r\n  }\r\n\r\n  const configBotonesActivos = (idReporte) =>\r\n  {\r\n    reportes.map((reporte) => {\r\n      if(reporte.Id === idReporte){\r\n        setGerenciasVisible(reporte.SelGerencia);\r\n        setUsuariosVisible(reporte.SelUsuario);\r\n        setEdificiosVisible(reporte.SelEdificio);\r\n        setHorariosVisible(reporte.SelHorario);\r\n        setPisosVisible(reporte.SelPiso);\r\n        setFechaVisible(reporte.SelFecha);\r\n        setRepoSel(reporte.Nombre);\r\n      }\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    cargarReportes();\r\n    const defaultSelFecha = [{ eID : 0, Nombre: 'Seleccionar Reporte', Direccion: '' }]\r\n    setEdificios(defaultSelFecha);\r\n    const defaultSelEdificio = [{ pID : 0, Nombre: 'Seleccionar Edificio',id : 0, horario: 'Seleccionar Edificio' }]\r\n    setHorarios(defaultSelEdificio);\r\n    setPisos(defaultSelEdificio);  \r\n  }, []);\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fecha: \"\",\r\n      gerencia: \"\",\r\n      usuario: \"\",\r\n      edificio: \"\",\r\n      piso: \"\",\r\n      hora: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      const { gerencia, usuario, edificio, piso, hora,reporte } = values;\r\n      validarYConsumirReporte(reporte,usuario, fechaSel, piso, edificio, hora,gerencia)\r\n    },\r\n  });\r\n\r\n  const resetValues = () => {\r\n    formik.values.gerencia = \"\";\r\n    formik.values.edificio = \"\";\r\n    formik.values.usuario = \"\";\r\n    formik.values.piso = \"\";\r\n    formik.values.hora = \"\";\r\n  };\r\n\r\n  var campos = [];\r\n  var valores = [];\r\n\r\n  const validarYAgregar = (valorBack,compValor,compActivo) =>\r\n  {\r\n    if (compActivo == 1)\r\n    {\r\n        campos.push(valorBack);\r\n        valores.push(compValor == \"\" ? null : compValor);\r\n    }\r\n    else if (compActivo == 2)\r\n    {\r\n      if (compValor == null)\r\n      {\r\n        alert.show(\"El parametro \" + valorBack + \" es obligatorio!\");\r\n        return false;\r\n      }\r\n      campos.push(valorBack);\r\n      valores.push(compValor == \"\" ? null : compValor);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function downloadFile(absoluteUrl) {\r\n\r\n    /*const fechaAux = formatISO(new Date(), {\r\n      representation: \"date\",\r\n    });*/\r\n\r\n    var link = document.createElement('a');\r\n    link.href = absoluteUrl;\r\n    link.download = 'Rep-'+ repoSel +'.CSV';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n };\r\n\r\n  const validarYConsumirReporte = (idReporte,idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada,idGerencia) => {\r\n    \r\n    campos = [];\r\n    valores = [];\r\n\r\n    if (!validarYAgregar(\"gerencia\",idGerencia,gerenciasVisible)) {return;};\r\n    if (!validarYAgregar(\"usuario\",idUsuario,usuariosVisible)) {return;};\r\n    if (!validarYAgregar(\"edificio\",IdEdificio,edificiosVisible)) {return;};\r\n    if (!validarYAgregar(\"piso\",IdPiso,pisosVisible)) {return;};\r\n    if (!validarYAgregar(\"horario\",idHorarioEntrada,horariosVisible)) {return;};\r\n    if (!validarYAgregar(\"fecha\",FechaTurno,fechaVisible)) {return;};\r\n\r\n    //alert.show(\"campos \" + campos + \"valores \" + valores);\r\n\r\n    getReporteDinamico(idReporte,campos, valores, false)\r\n    .then(response => {\r\n      //Generacion de link <a href=\"data:application/octet-stream,DATA\" download=\"FILENAME\">TITLE</a>\r\n      downloadFile(\"data:application/octet-stream,\" + response.data);\r\n    }).catch(function(error) {\r\n        if (error.response == undefined)\r\n          alert.show(\"\" + error);\r\n        else\r\n          alert.show(\"\" + error.response.data.error);\r\n      });\r\n};\r\n\r\n  async function handleDateChange(date) {\r\n    //resetValues();\r\n    const fechaAux = formatISO(new Date(`${date}`), {\r\n      representation: \"date\",\r\n    });\r\n    setFechaSel(fechaAux);\r\n  }\r\n\r\n  async function cargarPisos(idEdificio) {\r\n    const res = await getPisos(idEdificio,\"2099-1-1\");\r\n    const defaultTodos = [{ pID : null, Nombre: 'TODOS'}]\r\n    Array.prototype.push.apply(defaultTodos, res.data);\r\n\r\n    if (pisosVisible == 1 ) \r\n      setPisos(defaultTodos);\r\n    else\r\n      setPisos(res.data);\r\n\r\n  }\r\n\r\n  async function cargarHorarios(idEdificio) {\r\n  \r\n      const res = await getHoras(idEdificio,\"2099-1-1\");\r\n      const defaultTodos = [{ id : null, horario: 'TODOS'}]\r\n      Array.prototype.push.apply(defaultTodos, res.data);\r\n  \r\n      if (horariosVisible == 1 ) \r\n        setHorarios(defaultTodos);\r\n      else\r\n        setHorarios(res.data);\r\n    }\r\n\r\n  async function handleEdificiosChange(idEdificio) {\r\n    if (idEdificio)\r\n    {\r\n      await cargarPisos(idEdificio)\r\n      await cargarHorarios(idEdificio)\r\n    }\r\n  }\r\n\r\n  async function handleGerenciasChange(idGerencia) {\r\n    if (idGerencia)\r\n    {\r\n     // await cargarPisos(idGerencia)\r\n    }\r\n  }\r\n\r\n  async function handleReporteChange(idReporte) {\r\n    if (idReporte)\r\n    {\r\n      resetValues();\r\n      await cargarGerencias();\r\n      await cargarUsuarios();\r\n      await cargarEdificios();\r\n      configBotonesActivos(idReporte);\r\n    }\r\n  }\r\n\r\n    function populateFeriados(holiday) {\r\n      const feriadoData = [];\r\n      if (holiday) {\r\n        for (let a = 0; a < holiday.length; a++) {\r\n          const day = holiday[a].fecha.replace(/-/g, \"/\");\r\n          feriadoData.push(new Date(day));\r\n        }\r\n      }\r\n      return feriadoData;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Sidebar />\r\n        <div>\r\n          <br/>\r\n          <Container maxWidth=\"sm\">\r\n            <h1 className='ExpertaText'>Reporte</h1>\r\n            <p >Selecciona un reporte</p>\r\n            <br/>\r\n            <form onSubmit={formik.handleSubmit}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  flexDirection: \"column\",\r\n                }}>\r\n\r\n            <FormControl\r\n            style={{\r\n                marginTop: \"3%\",\r\n                alignSelf: \"center\",\r\n            }}\r\n            >\r\n            <InputLabel>\r\n                <b>Elegí el reporte</b>\r\n            </InputLabel>\r\n            <Select\r\n                id=\"reporte\"\r\n                name=\"reporte\"\r\n                required\r\n                style={{\r\n                marginBottom: \"15px\",\r\n                minWidth: \"50\",\r\n                }}\r\n                value={formik.values.reporte}\r\n                onChange={(e) => {\r\n                  formik.handleChange(e);\r\n                  handleReporteChange(e.target.value);\r\n                }}\r\n            >\r\n                {reportes &&\r\n                reportes.map((reporte) => (\r\n                    <MenuItem\r\n                    style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                    key={`reporte_${reporte.Id}`}\r\n                    value={reporte.Id}\r\n                    >\r\n                        {reporte.Nombre}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {fechaVisible > 0  && (   \r\n          <FormControl style={{ alignSelf: \"center\" }}>\r\n            <InputLabel>Elegí la fecha</InputLabel>\r\n              <div id=\"datePicker\">\r\n                <DatePicker\r\n                  style={{\r\n                    marginTop: \"10%\",\r\n                    marginRight: \"10%\",\r\n                    width: \"50%\",\r\n                    alignSelf: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                  id=\"fecha\"\r\n                  locale=\"es\"\r\n                  selected={formik.values.fecha}\r\n                  name=\"fecha\"\r\n                  placeholderText=\"Elegí la fecha\"\r\n                  onChange={(date) => handleDateChange(date)}\r\n                  dateFormat=\"MMMM d, yyyy\"\r\n                  filterDate={isWeekday}\r\n                  minDate={setMinutes(addDays(new Date(), -360), 30)}\r\n                  maxDate={setMinutes(addDays(new Date(), 360), 30)}\r\n                  showDisabledMonthNavigation\r\n                  inline={formik.values.sucursalId !== \"\"}\r\n                  excludeDates={populateFeriados(feriados)}\r\n                />\r\n              </div>\r\n            </FormControl>\r\n        )}\r\n\r\n        {gerenciasVisible > 0  && (\r\n          <FormControl\r\n          style={{\r\n              marginTop: \"3%\",\r\n              alignSelf: \"center\",\r\n          }}\r\n          >\r\n          <InputLabel>\r\n              <b>Elegí la gerencia</b>\r\n          </InputLabel>\r\n          <Select\r\n              id=\"gerencia\"\r\n              name=\"gerencia\"\r\n              required={gerenciasVisible == 2}\r\n              style={{\r\n              marginBottom: \"15px\",\r\n              minWidth: \"50\",\r\n              }}\r\n              value={formik.values.gerencia}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                handleGerenciasChange(e.target.value);\r\n              }}\r\n          >\r\n              {gerencias &&\r\n              gerencias.map((gerencia) => (\r\n                  <MenuItem\r\n                  style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                  key={`gerencia_${gerencia.id}`}\r\n                  value={gerencia.id}\r\n                  >\r\n                      {gerencia.Nombre}\r\n                  </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n        )}\r\n\r\n        {usuariosVisible > 0  && (\r\n            <FormControl\r\n              style={{\r\n                  marginTop: \"3%\",\r\n                  alignSelf: \"center\",\r\n              }}\r\n              >\r\n              <InputLabel>\r\n                  <b>Elegí el colaborador</b>\r\n              </InputLabel>\r\n              <Select\r\n                  id=\"usuario\"\r\n                  name=\"usuario\"\r\n                  required={usuariosVisible == 2}\r\n                  style={{\r\n                  marginBottom: \"15px\",\r\n                  minWidth: \"150\",\r\n                  }}\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.usuario}\r\n              >\r\n                  {usuarios &&\r\n                  usuarios.map((usuario) => (\r\n                      <MenuItem\r\n                      style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                      key={`usuario_${usuario.dni}`}\r\n                      value={usuario.dni}\r\n                      >\r\n                          {usuario.nombre}\r\n                      </MenuItem>\r\n                  ))}\r\n              </Select>\r\n              </FormControl>\r\n              )}    \r\n\r\n\r\n            {edificiosVisible > 0  && (\r\n              <FormControl\r\n              style={{\r\n                  marginTop: \"3%\",\r\n                  alignSelf: \"center\",\r\n              }}\r\n              >\r\n              <InputLabel>\r\n                  <b>Elegí el sitio</b>\r\n              </InputLabel>\r\n              <Select\r\n                  id=\"edificio\"\r\n                  name=\"edificio\"\r\n                  required={edificiosVisible == 2}\r\n                  style={{\r\n                  marginBottom: \"15px\",\r\n                  minWidth: \"50\",\r\n                  }}\r\n                  value={formik.values.edificio}\r\n                  onChange={(e) => {\r\n                    formik.handleChange(e);\r\n                    handleEdificiosChange(e.target.value);\r\n                  }}\r\n              >\r\n                  {edificios &&\r\n                  edificios.map((edificio) => (\r\n                      <MenuItem\r\n                      style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                      key={`edificio_${edificio.eID}`}\r\n                      value={edificio.eID}\r\n                      >\r\n                          {edificio.Nombre} - {edificio.Direccion} \r\n                      </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n            )}\r\n            \r\n            {pisosVisible > 0 && (\r\n            <FormControl\r\n            style={{\r\n                marginTop: \"3%\",\r\n                alignSelf: \"center\",\r\n            }}\r\n            >\r\n            <InputLabel>\r\n                <b>Elegí el piso</b>\r\n            </InputLabel>\r\n            <Select\r\n                id=\"piso\"\r\n                name=\"piso\"\r\n                required={pisosVisible == 2}\r\n                style={{\r\n                marginBottom: \"15px\",\r\n                minWidth: \"150\",\r\n                }}\r\n                onChange={(e) => {\r\n                  formik.handleChange(e);\r\n                  //setCupoPiso(e.target.value);\r\n                }}\r\n                value={formik.values.piso}\r\n            >\r\n                {pisos  &&\r\n                pisos.map((piso) => (\r\n                    <MenuItem\r\n                    style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                    key={`piso_${piso.pID}`}\r\n                    value={piso.pID}\r\n                    >\r\n                        {piso.Nombre}\r\n                    </MenuItem>\r\n\r\n                ))}\r\n            </Select>\r\n            </FormControl>\r\n            )}\r\n\r\n            {horariosVisible > 0  && (\r\n            <FormControl\r\n                style={{\r\n                  marginTop: \"3%\",\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                <InputLabel>\r\n                    <b>Elegí el horario</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"hora\"\r\n                    name=\"hora\"\r\n                    required={horariosVisible == 2}\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={(e) => {\r\n                      formik.handleChange(e);\r\n                      //setCupoHorario(e.target.value);\r\n                    }}\r\n                    value={formik.values.hora}\r\n                >\r\n                    {horarios &&\r\n                    horarios.map((hora) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                        key={`hora_${hora.id}`}\r\n                        value={hora.id}\r\n                        >\r\n                          {hora.horario}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            )}\r\n            <div style={{ marginTop: \"3%\", alignSelf: \"center\" }}>  \r\n              <Button\r\n              style={{ alignSelf: \"center\" ,textTransform: \"none\", textAlign: \"center\", backgroundColor: \"#0F1150\", color: \"white\" }}\r\n              variant=\"contained\"\r\n              type= 'submit'>Confirmar</Button>  \r\n\r\n            </div>   \r\n          </form>\r\n          </Container>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n      );\r\n  }\r\n\r\nexport default Reporte;",["106","107"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\ReportesAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\index.js",[],["108","109"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setMinutes, getDay, addDays, formatISO } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useAlert } from 'react-alert';\r\nimport swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Zoom,\r\n  } from \"@material-ui/core\";\r\n\r\nimport Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport { getEdificios, getPisos, getHoras, saveTurno } from '../apis/TurnosAPI';\r\nimport { getUsuariosDependientes } from '../apis/UsuariosAPI';\r\nimport { getUserDiagnostico } from '../apis/DiagnosticosAPI';\r\n\r\nconst isWeekday = (date) => {\r\n    const day = getDay(date);\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n//en este metodo se envia la fecha a la base para recuperar el resto de los datos\r\nconst Reserva = () => {\r\n    const [submit, setSubmit] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [feriados, setFeriados] = useState([]);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [edificios, setEdificios] = useState([]);\r\n    const [pisos, setPisos] = useState([]);\r\n    const [horarios, setHorarios] = useState([]);\r\n    const [fechaSel, setFechaSel] = useState();\r\n    const alert = useAlert();\r\n    const [done, setDone] = useState(false);\r\n\r\n    const [cupoE, setCupoE] = useState(0);\r\n    const [cupoP, setCupoP] = useState(0);\r\n    const [cupoH, setCupoH] = useState(0);\r\n\r\n    /*const useStyles = makeStyles((theme) => ({\r\n      formControl: {\r\n        width: \"100%\",\r\n      },\r\n      textField: {\r\n        marginTop: theme.spacing(6),\r\n      },\r\n      form: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n      }\r\n    }));\r\n    const classes = useStyles();*/\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          fecha: \"\",\r\n          usuario: \"\",\r\n          edificio: \"\",\r\n          piso: \"\",\r\n          hora: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n          const { fecha, usuario, edificio, piso, hora } = values;\r\n          guardarReserva(usuario, fechaSel, piso, edificio, hora);\r\n          setDone(true);\r\n        },\r\n      });\r\n\r\n      async function handleDateChange(date) {\r\n        resetValues();\r\n        const fechaAux = formatISO(new Date(`${date}`), {\r\n          representation: \"date\",\r\n        });\r\n        setFechaSel(fechaAux);\r\n        const res = await getEdificios(fechaAux);\r\n        setEdificios(res.data);\r\n      }\r\n\r\n      async function handleEdificiosChange(idEdificio) {\r\n        if (idEdificio)\r\n        {\r\n\r\n          const res = await getPisos(idEdificio,fechaSel);\r\n          setPisos(res.data);\r\n          const res2 = await getHoras(idEdificio,fechaSel);\r\n          setHorarios(res2.data);\r\n          setCupoEdificio(idEdificio);\r\n        }\r\n      }\r\n\r\n\r\n      const guardarReserva = (idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada) => {\r\n\r\n        saveTurno(idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada)\r\n            .then(response => {\r\n              alert.show(\"Reserva grabada correctamente!\");\r\n              setDone(true);\r\n            })          \r\n                .catch(function(error) {\r\n                  if (error.response == undefined)\r\n                    alert.show(\"\" + error);\r\n                  else\r\n                    alert.show(\"\" + error.response.data.error);\r\n                });\r\n    };\r\n\r\n      function populateFeriados(holiday) {\r\n        const feriadoData = [];\r\n        if (holiday) {\r\n          for (let a = 0; a < holiday.length; a++) {\r\n            const day = holiday[a].fecha.replace(/-/g, \"/\");\r\n            feriadoData.push(new Date(day));\r\n          }\r\n        }\r\n        return feriadoData;\r\n      }\r\n\r\n      async function cargarUsuarios() {\r\n        const res = await getUsuariosDependientes();\r\n        setUsuarios(res.data);\r\n      }\r\n\r\n      const isDiagActive = () => {\r\n\r\n        getUserDiagnostico().then(response => {\r\n        if (!response.data){\r\n            swal\r\n            .fire({\r\n              title: \"Advertencia\",\r\n              text: \"Debe realizar el autodiagóstico para poder reservar un turno.\",\r\n              icon: \"warning\",\r\n              confirmButtonColor: \"#009bdb\",\r\n              confirmButtonText: \"OK\",\r\n              animation: true,\r\n            })\r\n            .then((result) => {\r\n              if (result.value) { \r\n                window.location.replace(\"/Diagnostico\");\r\n              }\r\n            });\r\n          }\r\n        })          \r\n        .catch(function(error) {\r\n              if (error.response == undefined)\r\n                alert.show(\"\" + error);\r\n              else\r\n                alert.show(\"\" + error.response.data.error);\r\n        });\r\n        \r\n      }\r\n\r\n      useEffect(() => {\r\n          /*setWidthText(width > 1023 ? \"40%\" : \"60%\");\r\n          setMarginTop(width > 1023 ? \"2%\" : \"8%\");\r\n          setWidthh(width > 1023 ? \"50%\" : \"85%\");*/\r\n          isDiagActive();\r\n        cargarUsuarios();\r\n        const defaultSelFecha = [{ eID : 0, Nombre: 'Seleccionar Fecha', Direccion: '' }]\r\n        setEdificios(defaultSelFecha);\r\n        const defaultSelEdificio = [{ pID : 0, Nombre: 'Seleccionar Edificio',id : 0, horario: 'Seleccionar Edificio' }]\r\n        setHorarios(defaultSelEdificio);\r\n        setPisos(defaultSelEdificio);  \r\n      }, /*[width]*/[]);\r\n\r\n      const handleSubmit = () => {\r\n          setSubmit(true);\r\n      }\r\n\r\n \r\n      const setCupoEdificio = (value) => {\r\n        edificios.map((edificio) => {\r\n          if(edificio.eID === value){\r\n            setCupoE(edificio.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const setCupoPiso = (value) => {\r\n        pisos.map((piso) => {\r\n          if(piso.pID === value){\r\n            setCupoP(piso.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const setCupoHorario = (value) => {\r\n        horarios.map((hora) => {\r\n          if(hora.id === value){\r\n            setCupoH(hora.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const resetValues = () => {\r\n        formik.values.edificio = \"\";\r\n        formik.values.usuario = \"\";\r\n        formik.values.piso = \"\";\r\n        formik.values.hora = \"\";\r\n        setSubmit(false);\r\n      };\r\n\r\n\r\n    return (\r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n      <div>\r\n        <br/>\r\n        <Container maxWidth=\"sm\">\r\n        <h1 className='ExpertaText'>Reserva tu Turno</h1>\r\n        <p >Selecciona una fecha y un sitio para reservar!</p>\r\n        <br/>\r\n        <form onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}>\r\n                <FormControl style={{ alignSelf: \"center\" }}>\r\n                  <InputLabel>Elegí la fecha</InputLabel>\r\n                    <div id=\"datePicker\">\r\n                      <DatePicker\r\n                        style={{\r\n                          marginTop: \"10%\",\r\n                          marginRight: \"10%\",\r\n                          width: \"50%\",\r\n                          alignSelf: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        id=\"fecha\"\r\n                        locale=\"es\"\r\n                        selected={formik.values.fecha}\r\n                        name=\"fecha\"\r\n                        placeholderText=\"Elegí la fecha\"\r\n                        onChange={(date) => handleDateChange(date)}\r\n                        dateFormat=\"MMMM d, yyyy\"\r\n                        filterDate={isWeekday}\r\n                        minDate={setMinutes(addDays(new Date(), 1), 30)}\r\n                        maxDate={setMinutes(addDays(new Date(), 30), 30)}\r\n                        showDisabledMonthNavigation\r\n                        inline={formik.values.sucursalId !== \"\"}\r\n                        excludeDates={populateFeriados(feriados)}\r\n                      />\r\n                    </div>\r\n                  </FormControl>\r\n\r\n                    <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el sitio</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"edificio\"\r\n                        name=\"edificio\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"50\",\r\n                        }}\r\n                        value={formik.values.edificio}\r\n                        onChange={(e) => {\r\n                          formik.handleChange(e);\r\n                          handleEdificiosChange(e.target.value);\r\n                        }}\r\n                    >\r\n                        {edificios &&\r\n                        edificios.map((edificio) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`edificio_${edificio.eID}`}\r\n                            value={edificio.eID}\r\n                            >\r\n                                {edificio.Nombre} - {edificio.Direccion} \r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {cupoE != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoE}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n\r\n                  <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el colaborador</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"usuario\"\r\n                        name=\"usuario\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.usuario}\r\n                    >\r\n                        {usuarios &&\r\n                        usuarios.map((usuario) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`usuario_${usuario.dni}`}\r\n                            value={usuario.dni}\r\n                            >\r\n                                {usuario.nombre}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                  <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el piso</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"piso\"\r\n                    name=\"piso\"\r\n                    required\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={(e) => {\r\n                      formik.handleChange(e);\r\n                      setCupoPiso(e.target.value);\r\n                    }}\r\n                    value={formik.values.piso}\r\n                >\r\n                    {pisos &&\r\n                    pisos.map((piso) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                        key={`piso_${piso.pID}`}\r\n                        value={piso.pID}\r\n                        >\r\n                            {piso.Nombre}\r\n                        </MenuItem>\r\n\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {cupoP != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoP}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n\r\n                <FormControl\r\n                    style={{\r\n                      marginTop: \"3%\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    <InputLabel>\r\n                        <b>Elegí el horario</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"hora\"\r\n                        name=\"hora\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          formik.handleChange(e);\r\n                          setCupoHorario(e.target.value);\r\n                        }}\r\n                        value={formik.values.hora}\r\n                    >\r\n                        {horarios &&\r\n                        horarios.map((hora) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`hora_${hora.id}`}\r\n                            value={hora.id}\r\n                            onClick={handleSubmit}\r\n                            >\r\n                              {hora.horario}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {cupoH != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoH}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n                <div style={{ marginTop: \"3%\", alignSelf: \"center\" }}>  \r\n                {submit == true && (\r\n                  <Button\r\n                  style={{ alignSelf: \"center\" ,textTransform: \"none\", textAlign: \"center\", backgroundColor: \"#0F1150\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  type= 'submit'>Confirmar</Button>\r\n                )}     \r\n                </div>   \r\n            </form>\r\n        </Container>\r\n      </div>\r\n      <br/>\r\n      { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n    );\r\n}\r\nexport default Reserva;","C:\\Repo\\SafeDeskWeb\\src\\components\\Sidebar2.js",["129","130","131","132","133"],"C:\\Repo\\SafeDeskWeb\\src\\App.js",["134","135"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Diagnostico.js",["136","137","138","139","140","141"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Container, Checkbox, FormControl, FormGroup, FormControlLabel } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Api from '../apis/DiagnosticosAPI';\r\nimport Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst Diagnostico = (props) => {\r\n\r\n  const alert = useAlert();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [done, setDone] = useState(false);\r\n\r\n  const [check, setCheck] = useState({\r\n    temperatura: false,\r\n    gusto: false,\r\n    contacto: false,\r\n    embarazada: false, \r\n    cancer: false,\r\n    diabetes: false, \r\n    hepatica: false, \r\n    olfato: false, \r\n    garganta: false, \r\n    respiratoria: false\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setCheck({ ...check, [name]: event.target.checked });\r\n  };\r\n\r\n  const { temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria } = check;\r\n  const error = [temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria].filter(v => v).length !== 2;\r\n\r\n  const guardarDiagnostico = (temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria) => {\r\n\r\n      Api.saveDiagnostico(temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria)\r\n          .then(response => {\r\n            alert.show(\"Guardado Correctamente!\");\r\n            setDone(true);\r\n          })          \r\n              .catch(function(error) {\r\n                if (error.response == undefined)\r\n                  alert.show(\"\" + error);\r\n                else\r\n                  alert.show(\"\" + error.response.data.error);\r\n              });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      temperatura: false,\r\n      gusto: false,\r\n      contacto: false,\r\n      embarazada: false, \r\n      cancer: false,\r\n      diabetes: false, \r\n      hepatica: false, \r\n      olfato: false, \r\n      garganta: false, \r\n      respiratoria: false\r\n    },\r\n    onSubmit: (values) => {\r\n      const { temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria } = values;\r\n      guardarDiagnostico(temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria);\r\n    },\r\n  });\r\n\r\n  // const diagnosticoValido = () => {\r\n  //     Api.getUserDiagnostico()\r\n  //         .then(response => {\r\n  //           alert.show(\"Ya tienes un diagnóstico válido registrado.\");\r\n  //           setDone(true);\r\n  //         })          \r\n  //             .catch(function(error) {\r\n  //               if (error.response == undefined)\r\n  //                 alert.show(\"\" + error);\r\n  //               else\r\n  //                 alert.show(\"\" + error.response.data.error);\r\n  //             });\r\n  // }\r\n  // diagnosticoValido()\r\n\r\n  return ( \r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n      <div>\r\n        <Container className='HomeDescr' maxWidth=\"sm\">\r\n          <h1 className='ExpertaText'>Diagnóstico:</h1>\r\n          <div className={classes.root}>\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={temperatura} onChange={handleChange('temperatura')} value=\"temperatura\" />}\r\n                        label=\"Tengo temperatura mayor a 37°?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={gusto} onChange={handleChange('gusto')} value=\"gusto\" />}\r\n                        label=\"Tengo pérdida del gusto?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={contacto} onChange={handleChange('contacto')} value=\"contacto\" />}\r\n                        label=\"Tuve contacto cercano con COVID?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={embarazada} onChange={handleChange('embarazada')} value=\"embarazada\" />}\r\n                        label=\"Estoy embarazada?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={cancer} onChange={handleChange('cancer')} value=\"cancer\" />}\r\n                        label=\"Tengo/tuve cáncer?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={diabetes} onChange={handleChange('diabetes')} value=\"diabetes\" />}\r\n                        label=\"Tengo diabetes?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={hepatica} onChange={handleChange('hepatica')} value=\"hepatica\" />}\r\n                        label=\"Tengo alguna enfermedad hepática?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={olfato} onChange={handleChange('olfato')} value=\"olfato\" />}\r\n                        label=\"Tengo pérdida del olfato?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={garganta} onChange={handleChange('garganta')} value=\"garganta\" />}\r\n                        label=\"Tengo dolor de garganta?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={respiratoria} onChange={handleChange('respiratoria')} value=\"respiratoria\" />}\r\n                        label=\"Tengo dificultad respiratoria?\"\r\n                      />\r\n                    </FormGroup>\r\n              </FormControl>\r\n              <Button\r\n                style={{ alignSelf: \"center\" ,textTransform: \"none\"}}\r\n                variant=\"contained\"\r\n                type= 'submit'>Enviar</Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Diagnostico;","C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js",["142","143","144","145","146"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Home.js",["147","148","149","150","151"],"import React from 'react';\r\nimport Sidebar from './Sidebar2';\r\nimport '../utils/App.css';\r\nimport Header from '../shared/Header'\r\nimport { Container, Checkbox, FormControl, FormGroup, FormControlLabel, FormHelperText } from \"@material-ui/core\";\r\n\r\n\r\nconst Home = (props) => {\r\n  return ( \r\n    <div className=\"App\">\r\n      <Header />\r\n      <Sidebar />\r\n      <Container maxWidth=\"sm\">\r\n      <div className='HomeDescr'>\r\n        <h1 className='ExpertaText'>Bienvenido!</h1>\r\n        <br/>\r\n        Safe Desk es una aplicación que nos permite a los colaboradores hacer una vuelta controlada y \r\n        ordenada a la oficina y sus instalaciones.\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        Las funciones están acordes al momento que estamos viviendo permitiendo a \r\n        sus usuarios sacar turnos en días y horarios específicos con antelación.\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        Hacemos todo lo posible por mantener las maximas medidas de seguridad, les deseamos un buen reencuentro con sus compañeros!\r\n        <br/>\r\n        <br/>\r\n        <a href=\"/Reserva\">\r\n        Reservar nuevo turno\r\n        </a>\r\n      </div>\r\n      </Container>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n \r\nexport default Home;",["152","153"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js",["154","155","156","157","158","159","160","161","162"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js",["163","164","165","166","167","168","169","170","171","172"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\DiagnosticosAPI.js",[],{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"177","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":20},{"ruleId":"173","severity":1,"message":"178","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":13},{"ruleId":"173","severity":1,"message":"179","line":12,"column":13,"nodeType":"175","messageId":"176","endLine":12,"endColumn":17},{"ruleId":"173","severity":1,"message":"180","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":12},{"ruleId":"173","severity":1,"message":"181","line":22,"column":10,"nodeType":"175","messageId":"176","endLine":22,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":62,"column":26,"nodeType":"184","messageId":"185","endLine":62,"endColumn":28},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"190","line":5,"column":22,"nodeType":"175","messageId":"176","endLine":5,"endColumn":36},{"ruleId":"173","severity":1,"message":"191","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":20},{"ruleId":"173","severity":1,"message":"192","line":17,"column":5,"nodeType":"175","messageId":"176","endLine":17,"endColumn":9},{"ruleId":"173","severity":1,"message":"193","line":21,"column":46,"nodeType":"175","messageId":"176","endLine":21,"endColumn":55},{"ruleId":"173","severity":1,"message":"194","line":31,"column":10,"nodeType":"175","messageId":"176","endLine":31,"endColumn":16},{"ruleId":"173","severity":1,"message":"195","line":31,"column":18,"nodeType":"175","messageId":"176","endLine":31,"endColumn":27},{"ruleId":"173","severity":1,"message":"196","line":33,"column":20,"nodeType":"175","messageId":"176","endLine":33,"endColumn":31},{"ruleId":"173","severity":1,"message":"197","line":42,"column":10,"nodeType":"175","messageId":"176","endLine":42,"endColumn":14},{"ruleId":"173","severity":1,"message":"198","line":42,"column":16,"nodeType":"175","messageId":"176","endLine":42,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":56,"column":26,"nodeType":"184","messageId":"185","endLine":56,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":67,"column":25,"nodeType":"184","messageId":"185","endLine":67,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":78,"column":26,"nodeType":"184","messageId":"185","endLine":78,"endColumn":28},{"ruleId":"199","severity":1,"message":"200","line":91,"column":28,"nodeType":"201","messageId":"202","endLine":91,"endColumn":30},{"ruleId":"182","severity":1,"message":"183","line":142,"column":20,"nodeType":"184","messageId":"185","endLine":142,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":145,"column":32,"nodeType":"184","messageId":"185","endLine":145,"endColumn":34},{"ruleId":"182","severity":1,"message":"183","line":147,"column":25,"nodeType":"184","messageId":"185","endLine":147,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":155,"column":30,"nodeType":"184","messageId":"185","endLine":155,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":193,"column":28,"nodeType":"184","messageId":"185","endLine":193,"endColumn":30},{"ruleId":"182","severity":1,"message":"183","line":213,"column":22,"nodeType":"184","messageId":"185","endLine":213,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":226,"column":27,"nodeType":"184","messageId":"185","endLine":226,"endColumn":29},{"ruleId":"182","severity":1,"message":"183","line":365,"column":42,"nodeType":"184","messageId":"185","endLine":365,"endColumn":44},{"ruleId":"182","severity":1,"message":"183","line":403,"column":45,"nodeType":"184","messageId":"185","endLine":403,"endColumn":47},{"ruleId":"182","severity":1,"message":"183","line":439,"column":46,"nodeType":"184","messageId":"185","endLine":439,"endColumn":48},{"ruleId":"182","severity":1,"message":"183","line":477,"column":40,"nodeType":"184","messageId":"185","endLine":477,"endColumn":42},{"ruleId":"182","severity":1,"message":"183","line":516,"column":47,"nodeType":"184","messageId":"185","endLine":516,"endColumn":49},{"ruleId":"186","replacedBy":"203"},{"ruleId":"188","replacedBy":"204"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"188","replacedBy":"206"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"207","line":2,"column":22,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"190","line":3,"column":22,"nodeType":"175","messageId":"176","endLine":3,"endColumn":36},{"ruleId":"173","severity":1,"message":"191","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"173","severity":1,"message":"208","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":12},{"ruleId":"173","severity":1,"message":"209","line":12,"column":13,"nodeType":"175","messageId":"176","endLine":12,"endColumn":16},{"ruleId":"173","severity":1,"message":"192","line":20,"column":5,"nodeType":"175","messageId":"176","endLine":20,"endColumn":9},{"ruleId":"173","severity":1,"message":"210","line":37,"column":12,"nodeType":"175","messageId":"176","endLine":37,"endColumn":17},{"ruleId":"173","severity":1,"message":"211","line":37,"column":19,"nodeType":"175","messageId":"176","endLine":37,"endColumn":27},{"ruleId":"173","severity":1,"message":"196","line":38,"column":22,"nodeType":"175","messageId":"176","endLine":38,"endColumn":33},{"ruleId":"173","severity":1,"message":"212","line":75,"column":19,"nodeType":"175","messageId":"176","endLine":75,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":112,"column":38,"nodeType":"184","messageId":"185","endLine":112,"endColumn":40},{"ruleId":"182","severity":1,"message":"183","line":156,"column":34,"nodeType":"184","messageId":"185","endLine":156,"endColumn":36},{"ruleId":"213","severity":1,"message":"214","line":175,"column":21,"nodeType":"215","endLine":175,"endColumn":23,"suggestions":"216"},{"ruleId":"199","severity":1,"message":"200","line":183,"column":34,"nodeType":"201","messageId":"202","endLine":183,"endColumn":36},{"ruleId":"199","severity":1,"message":"200","line":191,"column":26,"nodeType":"201","messageId":"202","endLine":191,"endColumn":28},{"ruleId":"199","severity":1,"message":"200","line":199,"column":29,"nodeType":"201","messageId":"202","endLine":199,"endColumn":31},{"ruleId":"182","severity":1,"message":"183","line":417,"column":25,"nodeType":"184","messageId":"185","endLine":417,"endColumn":27},{"ruleId":"173","severity":1,"message":"217","line":10,"column":21,"nodeType":"175","messageId":"176","endLine":10,"endColumn":29},{"ruleId":"213","severity":1,"message":"218","line":25,"column":6,"nodeType":"215","endLine":25,"endColumn":8,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":30,"column":5,"nodeType":"222","messageId":"223","endLine":38,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":49,"column":26,"nodeType":"184","messageId":"185","endLine":49,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":94,"column":34,"nodeType":"184","messageId":"185","endLine":94,"endColumn":36},{"ruleId":"173","severity":1,"message":"224","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"225","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":47},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"224","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"207","line":2,"column":22,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"210","line":47,"column":9,"nodeType":"175","messageId":"176","endLine":47,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":57,"column":36,"nodeType":"184","messageId":"185","endLine":57,"endColumn":38},{"ruleId":"173","severity":1,"message":"226","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"227","line":3,"column":19,"nodeType":"175","messageId":"176","endLine":3,"endColumn":31},{"ruleId":"213","severity":1,"message":"228","line":19,"column":6,"nodeType":"215","endLine":19,"endColumn":8,"suggestions":"229"},{"ruleId":"182","severity":1,"message":"183","line":39,"column":26,"nodeType":"184","messageId":"185","endLine":39,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":56,"column":26,"nodeType":"184","messageId":"185","endLine":56,"endColumn":28},{"ruleId":"173","severity":1,"message":"230","line":5,"column":21,"nodeType":"175","messageId":"176","endLine":5,"endColumn":29},{"ruleId":"173","severity":1,"message":"231","line":5,"column":31,"nodeType":"175","messageId":"176","endLine":5,"endColumn":42},{"ruleId":"173","severity":1,"message":"232","line":5,"column":44,"nodeType":"175","messageId":"176","endLine":5,"endColumn":53},{"ruleId":"173","severity":1,"message":"233","line":5,"column":55,"nodeType":"175","messageId":"176","endLine":5,"endColumn":71},{"ruleId":"173","severity":1,"message":"234","line":5,"column":73,"nodeType":"175","messageId":"176","endLine":5,"endColumn":87},{"ruleId":"186","replacedBy":"235"},{"ruleId":"188","replacedBy":"236"},{"ruleId":"173","severity":1,"message":"237","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":68,"column":33,"nodeType":"184","messageId":"185","endLine":68,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":69,"column":31,"nodeType":"184","messageId":"185","endLine":69,"endColumn":33},{"ruleId":"182","severity":1,"message":"183","line":74,"column":33,"nodeType":"184","messageId":"185","endLine":74,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":75,"column":31,"nodeType":"184","messageId":"185","endLine":75,"endColumn":33},{"ruleId":"182","severity":1,"message":"183","line":81,"column":33,"nodeType":"184","messageId":"185","endLine":81,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":82,"column":31,"nodeType":"184","messageId":"185","endLine":82,"endColumn":33},{"ruleId":"182","severity":1,"message":"183","line":89,"column":33,"nodeType":"184","messageId":"185","endLine":89,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":90,"column":31,"nodeType":"184","messageId":"185","endLine":90,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"234","line":4,"column":73,"nodeType":"175","messageId":"176","endLine":4,"endColumn":87},{"ruleId":"213","severity":1,"message":"218","line":25,"column":6,"nodeType":"215","endLine":25,"endColumn":8,"suggestions":"238"},{"ruleId":"220","severity":1,"message":"221","line":29,"column":5,"nodeType":"222","messageId":"223","endLine":36,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":43,"column":50,"nodeType":"184","messageId":"185","endLine":43,"endColumn":52},{"ruleId":"182","severity":1,"message":"183","line":46,"column":26,"nodeType":"184","messageId":"185","endLine":46,"endColumn":28},{"ruleId":"173","severity":1,"message":"197","line":64,"column":10,"nodeType":"175","messageId":"176","endLine":64,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":79,"column":34,"nodeType":"184","messageId":"185","endLine":79,"endColumn":36},{"ruleId":"173","severity":1,"message":"239","line":92,"column":15,"nodeType":"175","messageId":"176","endLine":92,"endColumn":27},{"ruleId":"173","severity":1,"message":"240","line":92,"column":28,"nodeType":"175","messageId":"176","endLine":92,"endColumn":43},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'axios' is defined but never used.","'gVar' is defined but never used.","'Home' is defined but never used.","'cargando' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["241"],"no-negated-in-lhs",["242"],"'registerLocale' is defined but never used.","'makeStyles' is defined but never used.","'Zoom' is defined but never used.","'saveTurno' is defined but never used.","'submit' is assigned a value but never used.","'setSubmit' is assigned a value but never used.","'setFeriados' is assigned a value but never used.","'done' is assigned a value but never used.","'setDone' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["241"],["242"],["241"],["242"],"'Link' is defined but never used.","'Grid' is defined but never used.","'Yup' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'fecha' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isDiagActive'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'getToken' is defined but never used.","React Hook useEffect has a missing dependency: 'getConfig'. Either include it or remove the dependency array.",["244"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","'useState' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","React Hook useEffect has missing dependencies: 'getTurnosActivos' and 'getTurnosHistorico'. Either include them or remove the dependency array.",["245"],"'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.",["241"],["242"],"'SwitchVideoTwoTone' is defined but never used.",["246"],"'reservaTurno' is assigned a value but never used.","'autoDiagnostico' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"249","fix":"253"},"Update the dependencies array to be: [isDiagActive]",{"range":"254","text":"255"},"Update the dependencies array to be: [getConfig]",{"range":"256","text":"257"},"Update the dependencies array to be: [getTurnosActivos, getTurnosHistorico]",{"range":"258","text":"259"},{"range":"260","text":"257"},[5773,5775],"[isDiagActive]",[848,850],"[getConfig]",[652,654],"[getTurnosActivos, getTurnosHistorico]",[910,912]]
[{"C:\\Repo\\SafeDeskWeb\\src\\index.js":"1","C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js":"2","C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js":"3","C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js":"4","C:\\Repo\\SafeDeskWeb\\src\\reportWebVitals.js":"5","C:\\Repo\\SafeDeskWeb\\src\\apis\\DiagnosticosAPI.js":"6","C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js":"7","C:\\Repo\\SafeDeskWeb\\src\\apis\\ReportesAPI.js":"8","C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js":"9","C:\\Repo\\SafeDeskWeb\\src\\components\\Sidebar2.js":"10","C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js":"11","C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js":"12","C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js":"13"},{"size":626,"mtime":1606955407104,"results":"14","hashOfConfig":"15"},{"size":8685,"mtime":1607382020909,"results":"16","hashOfConfig":"15"},{"size":3119,"mtime":1607439641754,"results":"17","hashOfConfig":"15"},{"size":11720,"mtime":1607439962858,"results":"18","hashOfConfig":"15"},{"size":375,"mtime":1606443399064,"results":"19","hashOfConfig":"15"},{"size":853,"mtime":1607351203045,"results":"20","hashOfConfig":"15"},{"size":3497,"mtime":1607382020914,"results":"21","hashOfConfig":"15"},{"size":816,"mtime":1607040242104,"results":"22","hashOfConfig":"15"},{"size":1315,"mtime":1607438976349,"results":"23","hashOfConfig":"15"},{"size":3158,"mtime":1607439574577,"results":"24","hashOfConfig":"15"},{"size":4319,"mtime":1607379781894,"results":"25","hashOfConfig":"15"},{"size":770,"mtime":1607052260009,"results":"26","hashOfConfig":"15"},{"size":2566,"mtime":1607382020900,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1y9nia1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Repo\\SafeDeskWeb\\src\\index.js",[],["59","60"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js",["61","62","63","64","65","66","67","68","69","70"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\"\r\n\r\nimport Header from \"../shared/Header\"\r\nimport Sidebar from \"./Sidebar2\"\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setMinutes, getDay, addDays, formatISO } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Zoom,\r\n  } from \"@material-ui/core\";\r\n\r\n  \r\n\r\nconst Reporte = (prop) => {\r\n  \r\nconst isWeekday = (date) => {\r\n  const day = getDay(date);\r\n  return day !== 0 && day !== 6;\r\n};\r\n\r\n//en este metodo se envia la fecha a la base para recuperar el resto de los datos\r\n  const [feriados, setFeriados] = useState([]);\r\n  const [gerencias, setGerencias] = useState([]);\r\n\r\n  const formik = useFormik({\r\n      initialValues: {\r\n        fecha: \"\",\r\n        gerencia: \"\",\r\n        edificio: \"\",\r\n        piso: \"\",\r\n        hora: \"\",\r\n      },\r\n      onSubmit: (values) => {\r\n        const { fecha, gerencia, edificio, piso, hora } = values;\r\n        const fechaAux = formatISO(new Date(`${fecha}`), {\r\n          representation: \"date\",\r\n        });\r\n        const obj = {\r\n          fecha: fecha,\r\n          gerencia: gerencia,\r\n          edificio: edificio,\r\n          piso: piso,\r\n          hora: hora,\r\n        };\r\n        //dispatch(setTurnoValues(obj));\r\n        //deshabilitar();\r\n      },\r\n    });\r\n\r\n    function handleDateChange(date) {\r\n        //en este metodo se va a enviar la fecha al back para recuperar los demas datos\r\n    }\r\n\r\n    function populateFeriados(holiday) {\r\n      const feriadoData = [];\r\n      if (holiday) {\r\n        for (let a = 0; a < holiday.length; a++) {\r\n          const day = holiday[a].fecha.replace(/-/g, \"/\");\r\n          feriadoData.push(new Date(day));\r\n        }\r\n      }\r\n      return feriadoData;\r\n    }\r\n\r\n    return (  \r\n      <div>\r\n        <Header/>\r\n        <Sidebar/>\r\n        <div>\r\n        <Container maxWidth=\"sm\">\r\n        <h1 className='ExpertaText'>Reportes</h1>\r\n        <br/>\r\n        <form onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}>\r\n            <FormControl>\r\n            <InputLabel>Elegí la fecha</InputLabel>\r\n                <div id=\"datePicker\">\r\n                  <DatePicker\r\n                    style={{\r\n                      marginTop: \"10%\",\r\n                      marginRight: \"10%\",\r\n                      width: \"50%\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                    id=\"fecha\"\r\n                    locale=\"es\"\r\n                    selected={formik.values.fecha}\r\n                    name=\"fecha\"\r\n                    placeholderText=\"Elegí la fecha\"\r\n                    onChange={(date) => handleDateChange(date)}\r\n                    dateFormat=\"MMMM d, yyyy\"\r\n                    filterDate={isWeekday}\r\n                    minDate={setMinutes(addDays(new Date(), 1), 30)}\r\n                    maxDate={setMinutes(addDays(new Date(), 30), 30)}\r\n                    showDisabledMonthNavigation\r\n                    inline={formik.values.sucursalId !== \"\"}\r\n                    excludeDates={populateFeriados(feriados)}\r\n                  />\r\n                </div>\r\n              </FormControl>\r\n              <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí la gerencia</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"gerencia\"\r\n                    name=\"gerencia\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gerencia}\r\n                >\r\n                    {gerencias &&\r\n                    gerencias.map((gerencia) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                            \r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el colaborador</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"gerencia\"\r\n                    name=\"gerencia\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gerencia}\r\n                >\r\n                    {gerencias &&\r\n                    gerencias.map((gerencia) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                            \r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el sitio</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"gerencia\"\r\n                    name=\"gerencia\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gerencia}\r\n                >\r\n                    {gerencias &&\r\n                    gerencias.map((gerencia) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                            \r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el piso</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"gerencia\"\r\n                    name=\"gerencia\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gerencia}\r\n                >\r\n                    {gerencias &&\r\n                    gerencias.map((gerencia) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                            \r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el horario</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"gerencia\"\r\n                    name=\"gerencia\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.gerencia}\r\n                >\r\n                    {gerencias &&\r\n                    gerencias.map((gerencia) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                            \r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n            </form>\r\n        </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Reporte;","C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js",["71","72","73","74","75"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js",["76","77","78","79","80","81","82","83","84","85"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setMinutes, getDay, addDays, formatISO } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Zoom,\r\n  } from \"@material-ui/core\";\r\n\r\nimport Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport { getEdificios, getPisos, getHoras, saveTurno } from '../apis/TurnosAPI';\r\nimport { getUsuariosDependientes } from '../apis/UsuariosAPI';\r\n\r\nconst isWeekday = (date) => {\r\n    const day = getDay(date);\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n//en este metodo se envia la fecha a la base para recuperar el resto de los datos\r\nconst Reserva = () => {\r\n    const [feriados, setFeriados] = useState([]);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [edificios, setEdificios] = useState([]);\r\n    const [pisos, setPisos] = useState([]);\r\n    const [horarios, setHorarios] = useState([]);\r\n    const [fechaSel, setFechaSel] = useState();\r\n    const alert = useAlert();\r\n    const [done, setDone] = useState(false);\r\n\r\n    /*const useStyles = makeStyles((theme) => ({\r\n      formControl: {\r\n        width: \"100%\",\r\n      },\r\n      textField: {\r\n        marginTop: theme.spacing(6),\r\n      },\r\n      form: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n      }\r\n    }));\r\n    const classes = useStyles();*/\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          fecha: \"\",\r\n          usuario: \"\",\r\n          edificio: \"\",\r\n          piso: \"\",\r\n          hora: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n          const { fecha, usuario, edificio, piso, hora } = values;\r\n          guardarReserva(usuario, fechaSel, piso, edificio, hora);\r\n          setDone(true);\r\n        },\r\n      });\r\n\r\n      async function handleDateChange(date) {\r\n        const fechaAux = formatISO(new Date(`${date}`), {\r\n          representation: \"date\",\r\n        });\r\n        setFechaSel(fechaAux);\r\n        const res = await getEdificios(fechaAux);\r\n        setEdificios(res.data);\r\n      }\r\n\r\n      async function handleEdificiosChange(idEdificio) {\r\n        if (idEdificio)\r\n        {\r\n          const res = await getPisos(idEdificio,fechaSel);\r\n          setPisos(res.data);\r\n          const res2 = await getHoras(idEdificio,fechaSel);\r\n          setHorarios(res2.data);\r\n        }\r\n      }\r\n\r\n\r\n      const guardarReserva = (idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada) => {\r\n\r\n        saveTurno(idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada)\r\n            .then(response => {\r\n              alert.show(\"Reserva grabada correctamente!\");\r\n              setDone(true);\r\n            })          \r\n                .catch(function(error) {\r\n                  if (error.response == undefined)\r\n                    alert.show(\"\" + error);\r\n                  else\r\n                    alert.show(\"\" + error.response.data.error);\r\n                });\r\n    };\r\n\r\n      function populateFeriados(holiday) {\r\n        const feriadoData = [];\r\n        if (holiday) {\r\n          for (let a = 0; a < holiday.length; a++) {\r\n            const day = holiday[a].fecha.replace(/-/g, \"/\");\r\n            feriadoData.push(new Date(day));\r\n          }\r\n        }\r\n        return feriadoData;\r\n      }\r\n\r\n      async function cargarUsuarios() {\r\n        const res = await getUsuariosDependientes();\r\n        setUsuarios(res.data);\r\n      }\r\n\r\n      useEffect(() => {\r\n        cargarUsuarios();\r\n        const defaultSelFecha = [{ eID : 0, Nombre: 'Seleccionar Fecha', Direccion: '' }]\r\n        setEdificios(defaultSelFecha);\r\n        const defaultSelEdificio = [{ pID : 0, Nombre: 'Seleccionar Edificio',id : 0, horario: 'Seleccionar Edificio' }]\r\n        setHorarios(defaultSelEdificio);\r\n        setPisos(defaultSelEdificio);  \r\n      }, []);\r\n\r\n      /*useEffect(() => {\r\n        try {\r\n          setWidthText(width > 1023 ? \"40%\" : \"60%\");\r\n          setMarginTop(width > 1023 ? \"2%\" : \"8%\");\r\n          setWidthh(width > 1023 ? \"50%\" : \"85%\");\r\n          getSucursalesFunc();\r\n          getFeriadosFunc();\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      }, [width]);*/\r\n\r\n    return (\r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n      <div>\r\n        <br/>\r\n        <Container maxWidth=\"sm\">\r\n        <h1 className='ExpertaText'>Reserva tu Turno</h1>\r\n        <p >Selecciona una fecha y un sitio para reservar!</p>\r\n        <br/>\r\n        <form onSubmit={formik.handleSubmit}\r\n            //id=\"reserva-form\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}>\r\n                <FormControl>\r\n                  <InputLabel>Elegí la fecha</InputLabel>\r\n                    <div id=\"datePicker\">\r\n                      <DatePicker\r\n                        style={{\r\n                          marginTop: \"10%\",\r\n                          marginRight: \"10%\",\r\n                          width: \"50%\",\r\n                          alignSelf: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        id=\"fecha\"\r\n                        locale=\"es\"\r\n                        selected={formik.values.fecha}\r\n                        name=\"fecha\"\r\n                        placeholderText=\"Elegí la fecha\"\r\n                        onChange={(date) => handleDateChange(date)}\r\n                        dateFormat=\"MMMM d, yyyy\"\r\n                        filterDate={isWeekday}\r\n                        minDate={setMinutes(addDays(new Date(), 1), 30)}\r\n                        maxDate={setMinutes(addDays(new Date(), 30), 30)}\r\n                        showDisabledMonthNavigation\r\n                        inline={formik.values.sucursalId !== \"\"}\r\n                        excludeDates={populateFeriados(feriados)}\r\n                      />\r\n                    </div>\r\n                  </FormControl>\r\n\r\n                    <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el sitio</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"edificio\"\r\n                        name=\"edificio\"\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"50\",\r\n                        }}\r\n                        value={formik.values.edificio}\r\n                        onChange={(e) => {\r\n                          formik.handleChange(e);\r\n                          handleEdificiosChange(e.target.value);\r\n                        }}\r\n                    >\r\n                        {edificios &&\r\n                        edificios.map((edificio) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`edificio_${edificio.eID}`}\r\n                            value={edificio.eID}\r\n                            >\r\n                                {edificio.Nombre} - {edificio.Direccion}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el colaborador</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"usuario\"\r\n                        name=\"usuario\"\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.usuario}\r\n                    >\r\n                        {usuarios &&\r\n                        usuarios.map((usuario) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`usuario_${usuario.dni}`}\r\n                            value={usuario.dni}\r\n                            >\r\n                                {usuario.nombre}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                  <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el piso</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"piso\"\r\n                    name=\"piso\"\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.piso}\r\n                >\r\n                    {pisos &&\r\n                    pisos.map((piso) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                        key={`piso_${piso.pID}`}\r\n                        value={piso.pID}\r\n                        >\r\n                            {piso.Nombre}\r\n                        </MenuItem>\r\n\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                  <FormControl\r\n                    style={{\r\n                      marginTop: \"3%\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    <InputLabel>\r\n                        <b>Elegí el horario</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"hora\"\r\n                        name=\"hora\"\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.hora}\r\n                    >\r\n                        {horarios &&\r\n                        horarios.map((hora) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`hora_${hora.id}`}\r\n                            value={hora.id}\r\n                            >\r\n                                {hora.horario}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <Button\r\n                  style={{ alignSelf: \"center\" ,textTransform: \"none\"}}\r\n                  variant=\"contained\"\r\n                  type= 'submit'>Confirmar</Button>\r\n            </form>\r\n        </Container>\r\n      </div>\r\n      { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n    );\r\n}\r\nexport default Reserva;","C:\\Repo\\SafeDeskWeb\\src\\reportWebVitals.js",[],"C:\\Repo\\SafeDeskWeb\\src\\apis\\DiagnosticosAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js",["86"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\ReportesAPI.js",[],["87","88"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\Sidebar2.js",["89","90","91","92","93"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js",["94","95","96","97","98","99","100"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from '../shared/Header'\r\nimport { useFormik } from \"formik\";\r\nimport { FormControl, TextField, InputLabel } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { setToken, setUser, getUser, getToken } from \"../utils/auth-helper\";\r\nimport * as gVar from \"../utils/properties\";\r\nimport Home from \"./Home\";\r\nimport * as Auth from \"../apis/AuthAPI\";\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst Login = () => {\r\n\r\n  const alert = useAlert();\r\n\r\n  \r\n  const [cargando, setCargando] = useState(false)\r\n  const [logged, setLogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (getToken()) \r\n    {\r\n      setLogged(true);\r\n    }\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      marginTop: theme.spacing(6),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const validation = Yup.object().shape({\r\n    dni: Yup.string()\r\n    .min(3, \"El dni debe contener 3 caracteres o más\")\r\n    .required(\"requerido\"),\r\n    password: Yup.string().required(\"requerido\"),\r\n  });\r\n\r\n  const LogIn = (dni,password) => {\r\n    setCargando(true);\r\n\r\n    Auth.loginUser(dni,password)\r\n    .then(response => {\r\n      setToken(response.data.token);\r\n      setUser(response.data);\r\n      setCargando(false);\r\n      alert.show(\"Bienvenido \" +  getUser().Nombre);\r\n      setLogged(true);\r\n    })          \r\n    .catch(function(error) {\r\n\r\n      if (error.response == undefined)\r\n        alert.show(\"\" + error);\r\n      else\r\n        alert.show(\"\" + error.response.data.error);\r\n\r\n      setCargando(false);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      dni: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validation,\r\n    onSubmit: (values) => {\r\n      const { dni, password } = values;\r\n      LogIn(dni,password);\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <Container maxWidth=\"sm\">\r\n          <h1 className='ExpertaText' style={{ fontSize : \"50px\" }}>SAFE DESK</h1>\r\n          <p>Para comenzar ingresá tu DNI y contraseña.</p>\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>DNI</InputLabel>\r\n              <TextField\r\n                className={classes.textField}\r\n                onChange={formik.handleChange}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá tu DNI\"\r\n                //disabled={true}\r\n                id=\"dni\"\r\n                name=\"dni\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.dni}\r\n                error={formik.errors.dni}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Contraseña</InputLabel>\r\n              <TextField\r\n                onChange={formik.handleChange}\r\n                className={classes.textField}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá la contraseña\"\r\n                 type=\"password\"\r\n                //disabled={true}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.password}\r\n                error={formik.errors.password}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              style={{ alignSelf: \"center\" ,textTransform: \"none\"}}\r\n              variant=\"contained\"\r\n              type= 'submit'>Ingresar</Button>\r\n            <Link to=\"/vales\" style={{ textDecoration: \"none\",alignSelf: \"center\" }}>\r\n            </Link>\r\n            <br/>\r\n          </form>\r\n        </Container>\r\n        { logged ? <Redirect to=\"/Home\"/> : null }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js",["101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"114","line":6,"column":22,"nodeType":"111","messageId":"112","endLine":6,"endColumn":36},{"ruleId":"109","severity":1,"message":"115","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":20},{"ruleId":"109","severity":1,"message":"116","line":16,"column":5,"nodeType":"111","messageId":"112","endLine":16,"endColumn":11},{"ruleId":"109","severity":1,"message":"117","line":17,"column":5,"nodeType":"111","messageId":"112","endLine":17,"endColumn":9},{"ruleId":"109","severity":1,"message":"118","line":30,"column":20,"nodeType":"111","messageId":"112","endLine":30,"endColumn":31},{"ruleId":"109","severity":1,"message":"119","line":31,"column":21,"nodeType":"111","messageId":"112","endLine":31,"endColumn":33},{"ruleId":"109","severity":1,"message":"120","line":43,"column":15,"nodeType":"111","messageId":"112","endLine":43,"endColumn":23},{"ruleId":"109","severity":1,"message":"121","line":46,"column":15,"nodeType":"111","messageId":"112","endLine":46,"endColumn":18},{"ruleId":"109","severity":1,"message":"122","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"109","severity":1,"message":"123","line":3,"column":19,"nodeType":"111","messageId":"112","endLine":3,"endColumn":31},{"ruleId":"124","severity":1,"message":"125","line":19,"column":6,"nodeType":"126","endLine":19,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":26,"nodeType":"130","messageId":"131","endLine":32,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":49,"column":26,"nodeType":"130","messageId":"131","endLine":49,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"132","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"133","line":2,"column":22,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":3,"column":22,"nodeType":"111","messageId":"112","endLine":3,"endColumn":36},{"ruleId":"109","severity":1,"message":"115","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"134","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":12},{"ruleId":"109","severity":1,"message":"117","line":18,"column":5,"nodeType":"111","messageId":"112","endLine":18,"endColumn":9},{"ruleId":"109","severity":1,"message":"118","line":33,"column":22,"nodeType":"111","messageId":"112","endLine":33,"endColumn":33},{"ruleId":"109","severity":1,"message":"135","line":67,"column":19,"nodeType":"111","messageId":"112","endLine":67,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":101,"column":38,"nodeType":"130","messageId":"131","endLine":101,"endColumn":40},{"ruleId":"109","severity":1,"message":"136","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":28},{"ruleId":"105","replacedBy":"137"},{"ruleId":"107","replacedBy":"138"},{"ruleId":"109","severity":1,"message":"139","line":10,"column":21,"nodeType":"111","messageId":"112","endLine":10,"endColumn":29},{"ruleId":"124","severity":1,"message":"140","line":25,"column":6,"nodeType":"126","endLine":25,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":29,"column":5,"nodeType":"144","messageId":"145","endLine":36,"endColumn":6},{"ruleId":"128","severity":1,"message":"129","line":47,"column":26,"nodeType":"130","messageId":"131","endLine":47,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":87,"column":34,"nodeType":"130","messageId":"131","endLine":87,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"132","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":20},{"ruleId":"109","severity":1,"message":"146","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":13},{"ruleId":"109","severity":1,"message":"147","line":12,"column":13,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"148","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":12},{"ruleId":"109","severity":1,"message":"149","line":22,"column":10,"nodeType":"111","messageId":"112","endLine":22,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":62,"column":26,"nodeType":"130","messageId":"131","endLine":62,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"150","line":4,"column":73,"nodeType":"111","messageId":"112","endLine":4,"endColumn":87},{"ruleId":"109","severity":1,"message":"151","line":34,"column":9,"nodeType":"111","messageId":"112","endLine":34,"endColumn":14},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'registerLocale' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'Zoom' is defined but never used.","'setFeriados' is assigned a value but never used.","'setGerencias' is assigned a value but never used.","'fechaAux' is assigned a value but never used.","'obj' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTurnosActivos' and 'getTurnosHistorico'. Either include them or remove the dependency array.","ArrayExpression",["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'fecha' is assigned a value but never used.","'SwitchVideoTwoTone' is defined but never used.",["152"],["153"],"'getToken' is defined but never used.","React Hook useEffect has a missing dependency: 'getConfig'. Either include it or remove the dependency array.",["155"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'axios' is defined but never used.","'gVar' is defined but never used.","'Home' is defined but never used.","'cargando' is assigned a value but never used.","'FormHelperText' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [getTurnosActivos, getTurnosHistorico]",{"range":"160","text":"161"},"Update the dependencies array to be: [getConfig]",{"range":"162","text":"163"},[652,654],"[getTurnosActivos, getTurnosHistorico]",[848,850],"[getConfig]"]
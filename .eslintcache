[{"C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js":"1","C:\\Repo\\SafeDeskWeb\\src\\components\\Perfil.js":"2","C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js":"3","C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js":"4","C:\\Repo\\SafeDeskWeb\\src\\components\\Diagnostico.js":"5","C:\\Repo\\SafeDeskWeb\\src\\components\\Home.js":"6","C:\\Repo\\SafeDeskWeb\\src\\components\\Contraseña.js":"7","C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js":"8","C:\\Repo\\SafeDeskWeb\\src\\index.js":"9","C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js":"10","C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js":"11","C:\\Repo\\SafeDeskWeb\\src\\utils\\auth-helper.js":"12","C:\\Repo\\SafeDeskWeb\\src\\apis\\AuthAPI.js":"13","C:\\Repo\\SafeDeskWeb\\src\\shared\\Header.js":"14","C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js":"15","C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js":"16"},{"size":5754,"mtime":1608529526521,"results":"17","hashOfConfig":"18"},{"size":1948,"mtime":1608516280639,"results":"19","hashOfConfig":"18"},{"size":4794,"mtime":1608523296879,"results":"20","hashOfConfig":"18"},{"size":4366,"mtime":1608517423691,"results":"21","hashOfConfig":"18"},{"size":8502,"mtime":1608517521524,"results":"22","hashOfConfig":"18"},{"size":1858,"mtime":1608525542327,"results":"23","hashOfConfig":"18"},{"size":5402,"mtime":1608518702306,"results":"24","hashOfConfig":"18"},{"size":15574,"mtime":1608524089460,"results":"25","hashOfConfig":"18"},{"size":626,"mtime":1606955407104,"results":"26","hashOfConfig":"18"},{"size":770,"mtime":1607052260009,"results":"27","hashOfConfig":"18"},{"size":18101,"mtime":1608523933332,"results":"28","hashOfConfig":"18"},{"size":1493,"mtime":1607050466669,"results":"29","hashOfConfig":"18"},{"size":260,"mtime":1607039165512,"results":"30","hashOfConfig":"18"},{"size":1037,"mtime":1607096793128,"results":"31","hashOfConfig":"18"},{"size":1315,"mtime":1607438976349,"results":"32","hashOfConfig":"18"},{"size":3543,"mtime":1608093230564,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1y9nia1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Repo\\SafeDeskWeb\\src\\components\\MisReservas.js",["74","75","76","77","78","79","80","81"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Perfil.js",["82","83","84","85","86","87","88"],"import Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { useAlert } from 'react-alert';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getUser } from '../utils/auth-helper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Perfil = () => {\r\n\r\n    const goChange = () => {\r\n        window.location.replace(\"/Contrasena\");\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n            <Header/>\r\n            <Sidebar/>\r\n        </div>\r\n        <div className='divPerfil'>\r\n        <h1 className='ExpertaText'>Perfil</h1>\r\n                <br></br>\r\n            \r\n            <Paper className='paperPerfil'>\r\n                <div>\r\n                    <p className='txtTit'>Nombre y Apellido</p>\r\n                    <p className='txtUsr'>{getUser().Nombre}</p>\r\n                </div>\r\n                <div>\r\n                    <p className='txtTit'>DNI</p>\r\n                    <p className='txtUsr'>{getUser().userId}</p>\r\n                </div>\r\n                <div>\r\n                    <p className='txtTit'>E-mail</p>\r\n                    <p className='txtUsr'>{getUser().Email}</p>\r\n                </div>\r\n                <div>\r\n                    <p className='txtTit'>Gerencia</p>\r\n                    <p className='txtUsr'>{getUser().Gerencia}</p>\r\n                </div>\r\n                <div>\r\n                    <p className='txtTit'>Contraseña</p>\r\n                    <Button\r\n                    style={{ marginTop: \"5pt\", alignSelf: \"left\" ,textTransform: \"none\", backgroundColor: \"#0F1150\", color: \"white\" }}\r\n                    variant=\"contained\"\r\n                    onClick={goChange}\r\n                    >Cambiar</Button>\r\n                </div>\r\n            </Paper>\r\n            <br/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Perfil;",["89","90"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Administracion.js",["91","92","93","94","95","96","97","98","99","100"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Login.js",["101","102","103","104","105","106","107","108"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from '../shared/Header'\r\nimport { useFormik } from \"formik\";\r\nimport { FormControl, TextField, InputLabel } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { setToken, setUser, getUser, getToken } from \"../utils/auth-helper\";\r\nimport * as gVar from \"../utils/properties\";\r\nimport Home from \"./Home\";\r\nimport * as Auth from \"../apis/AuthAPI\";\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst Login = () => {\r\n\r\n  const alert = useAlert();\r\n\r\n  \r\n  const [cargando, setCargando] = useState(false)\r\n  const [logged, setLogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (getToken()) \r\n    {\r\n      setLogged(true);\r\n    }\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      width: \"100%\",\r\n    },\r\n    textField: {\r\n      marginTop: theme.spacing(6),\r\n    },\r\n    btn:{\r\n      alignSelf: \"center\" ,\r\n      textTransform: \"none\", \r\n      textAlign: 'center', \r\n      backgroundColor: \"#0F1150\", \r\n      color: \"white\"\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const validation = Yup.object().shape({\r\n    dni: Yup.string()\r\n    .min(3, \"El dni debe contener 3 caracteres o más\")\r\n    .required(\"requerido\"),\r\n    password: Yup.string().required(\"requerido\"),\r\n  });\r\n\r\n  const LogIn = (dni,password) => {\r\n    setCargando(true);\r\n\r\n    Auth.loginUser(dni,password)\r\n    .then(response => {\r\n      setToken(response.data.token);\r\n      setUser(response.data);\r\n      setCargando(false);\r\n      alert.show(\"Bienvenido \" +  getUser().Nombre);\r\n      setLogged(true);\r\n    })          \r\n    .catch(function(error) {\r\n\r\n      if (error.response == undefined)\r\n        alert.show(\"\" + error);\r\n      else\r\n        alert.show(\"\" + error.response.data.error);\r\n\r\n      setCargando(false);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      dni: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validation,\r\n    onSubmit: (values) => {\r\n      const { dni, password } = values;\r\n      LogIn(dni,password);\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"loginBox\">\r\n        <Container maxWidth=\"sm\">\r\n          <h1 className='ExpertaText' style={{ fontSize : \"50px\" }}>SAFE DESK</h1>\r\n          <p>Para comenzar ingresá tu DNI y contraseña.</p>\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>DNI</InputLabel>\r\n              <TextField\r\n                className={classes.textField}\r\n                onChange={formik.handleChange}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá tu DNI\"\r\n                //disabled={true}\r\n                id=\"dni\"\r\n                name=\"dni\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.dni}\r\n                error={formik.errors.dni}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Contraseña</InputLabel>\r\n              <TextField\r\n                onChange={formik.handleChange}\r\n                className={classes.textField}\r\n                style={{ marginBottom: \"2%\" }}\r\n                placeholder=\"Ingresá la contraseña\"\r\n                type=\"password\"\r\n                //disabled={true}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                helperText= {formik.errors.password}\r\n                error={formik.errors.password}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              className={classes.btn}\r\n              variant=\"contained\"\r\n              type= 'submit'>Ingresar</Button>\r\n            <br/>\r\n          </form>\r\n        </Container>\r\n        { logged ? <Redirect to=\"/Home\"/> : null }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;",["109","110"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Diagnostico.js",["111","112","113","114","115","116"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Container, Checkbox, FormControl, FormGroup, FormControlLabel } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Api from '../apis/DiagnosticosAPI';\r\nimport Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport { useAlert } from 'react-alert';\r\n\r\nconst Diagnostico = (props) => {\r\n\r\n  const alert = useAlert();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    btn:{\r\n      alignSelf: \"center\" ,\r\n      textTransform: \"none\", \r\n      textAlign: 'center', \r\n      backgroundColor: \"#0F1150\", \r\n      color: \"white\"\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const TEMPERATURA = \"temperatura\";\r\n  const GUSTO = \"gusto\";\r\n  const CONTACTO = \"contacto\";\r\n  const EMBARAZADA = \"embarazada\";\r\n  const CANCER = \"cancer\";\r\n  const DIABETES = \"diabetes\";\r\n  const HEPATICA = \"hepatica\";\r\n  const OLFATO = \"olfato\";\r\n  const GARGANTA = \"garganta\";\r\n  const RESPIRATORIA = \"respiratoria\";\r\n\r\n  const [done, setDone] = useState(false);\r\n\r\n  const [temperatura, setTemperatura] = useState(false)\r\n  const [gusto, setGusto] = useState(false)\r\n  const [contacto, setContacto] = useState(false);\r\n  const [embarazada, setEmbarazada] = useState(false);\r\n  const [cancer, setCancer] = useState(false);\r\n  const [diabetes, setDiabetes] = useState(false);\r\n  const [hepatica, setHepatica] = useState(false);\r\n  const [olfato, setOlfato] = useState(false);\r\n  const [garganta, setGarganta] = useState(false);\r\n  const [respiratoria, setRespiratoria] = useState(false);\r\n\r\n  const setConfig = (nombreConfig,valorConfig) => {\r\n    \r\n    switch (nombreConfig) {\r\n      case TEMPERATURA:\r\n        setTemperatura(valorConfig);\r\n        break;\r\n      case GUSTO:\r\n        setGusto(valorConfig);\r\n        break;\r\n      case CONTACTO: \r\n        setContacto(valorConfig);\r\n        break;\r\n      case EMBARAZADA:\r\n        setEmbarazada(valorConfig);\r\n        break;\r\n      case CANCER:\r\n        setCancer(valorConfig);\r\n        break;\r\n      case DIABETES: \r\n        setDiabetes(valorConfig);\r\n        break;\r\n      case HEPATICA:\r\n        setHepatica(valorConfig);\r\n        break;\r\n      case OLFATO:\r\n        setOlfato(valorConfig);\r\n        break;\r\n      case GARGANTA: \r\n        setGarganta(valorConfig);\r\n        break;\r\n      case RESPIRATORIA: \r\n        setRespiratoria(valorConfig);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleChange = name => event => {  \r\n      setConfig(name,event.target.checked)\r\n    };\r\n\r\n  const guardarDiagnostico = (temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria) => {\r\n\r\n      Api.saveDiagnostico(temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria)\r\n          .then(response => {\r\n            alert.show(\"Guardado Correctamente!\");\r\n            setDone(true);\r\n          })          \r\n              .catch(function(error) {\r\n                if (error.response == undefined)\r\n                  alert.show(\"\" + error);\r\n                else\r\n                  alert.show(\"\" + error.response.data.error);\r\n              });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      temperatura: false,\r\n      gusto: false,\r\n      contacto: false,\r\n      embarazada: false, \r\n      cancer: false,\r\n      diabetes: false, \r\n      hepatica: false, \r\n      olfato: false, \r\n      garganta: false, \r\n      respiratoria: false\r\n    },\r\n    onSubmit: (values) => {\r\n      guardarDiagnostico(temperatura, gusto, contacto, embarazada, cancer, diabetes, hepatica, olfato, garganta, respiratoria);\r\n    },\r\n  });\r\n\r\n  // const diagnosticoValido = () => {\r\n  //     Api.getUserDiagnostico()\r\n  //         .then(response => {\r\n  //           alert.show(\"Ya tienes un diagnóstico válido registrado.\");\r\n  //           setDone(true);\r\n  //         })          \r\n  //             .catch(function(error) {\r\n  //               if (error.response == undefined)\r\n  //                 alert.show(\"\" + error);\r\n  //               else\r\n  //                 alert.show(\"\" + error.response.data.error);\r\n  //             });\r\n  // }\r\n  // diagnosticoValido()\r\n\r\n  return ( \r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n      <div>\r\n        <Container className='HomeDescr' maxWidth=\"sm\">\r\n          <h1 className='ExpertaText'>Diagnóstico:</h1>\r\n          <div className={classes.root}>\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={temperatura} onChange={handleChange(TEMPERATURA)} value=\"temperatura\" />}\r\n                        label=\"Tengo temperatura mayor a 37°?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={gusto} onChange={handleChange(GUSTO)} value=\"gusto\" />}\r\n                        label=\"Tengo pérdida del gusto?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={contacto} onChange={handleChange(CONTACTO)} value=\"contacto\" />}\r\n                        label=\"Tuve contacto cercano con COVID?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={embarazada} onChange={handleChange(EMBARAZADA)} value=\"embarazada\" />}\r\n                        label=\"Estoy embarazada?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={cancer} onChange={handleChange(CANCER)} value=\"cancer\" />}\r\n                        label=\"Tengo/tuve cáncer?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={diabetes} onChange={handleChange(DIABETES)} value=\"diabetes\" />}\r\n                        label=\"Tengo diabetes?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={hepatica} onChange={handleChange(HEPATICA)} value=\"hepatica\" />}\r\n                        label=\"Tengo alguna enfermedad hepática?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={olfato} onChange={handleChange(OLFATO)} value=\"olfato\" />}\r\n                        label=\"Tengo pérdida del olfato?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={garganta} onChange={handleChange(GARGANTA)} value=\"garganta\" />}\r\n                        label=\"Tengo dolor de garganta?\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        control={<Checkbox checked={respiratoria} onChange={handleChange(RESPIRATORIA)} value=\"respiratoria\" />}\r\n                        label=\"Tengo dificultad respiratoria?\"\r\n                      />\r\n                    </FormGroup>\r\n              </FormControl>\r\n              <Button\r\n                className={classes.btn}\r\n                variant=\"contained\"\r\n                type= 'submit'>Enviar</Button>\r\n                \r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Diagnostico;","C:\\Repo\\SafeDeskWeb\\src\\components\\Home.js",["117","118","119","120","121","122","123","124"],"C:\\Repo\\SafeDeskWeb\\src\\components\\Contraseña.js",["125","126","127","128","129","130"],"import Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useAlert } from 'react-alert';\r\nimport { getUser ,setUser} from '../utils/auth-helper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FormControl, TextField, InputLabel, Typography } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport { changePassword } from '../apis/UsuariosAPI';\r\n\r\n\r\nconst Contrasena = () => {\r\n\r\n  const validation = Yup.object().shape({\r\n    actualPassword: Yup.string()\r\n    .required(\"requerido\"),\r\n    newPassword: Yup.string()\r\n    .required(\"requerido\"),\r\n    confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"newPassword\"), null], \"Las contraseñas deben coincidir\")\r\n    .required(\"requerido\"),\r\n  });\r\n\r\n  const [done, setDone] = useState(false);\r\n  const alert = useAlert();\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n          width: \"100%\",\r\n        },\r\n        textField: {\r\n          marginTop: theme.spacing(6),\r\n          marginRight: theme.spacing(6),\r\n        },\r\n        btn:{\r\n          alignSelf: \"center\" ,\r\n          textTransform: \"none\",\r\n          display: \"flex\",\r\n          textAlign: 'center', \r\n          backgroundColor: \"#0F1150\", \r\n          color: \"white\"\r\n        }\r\n      }));\r\n      const classes = useStyles();\r\n\r\n      const cambiarContraseña = () => {\r\n        changePassword(getUser().userId, formik.values.actualPassword, formik.values.newPassword)\r\n            .then(response => {\r\n              alert.show(\"Contraseña cambiada correctamente!\");\r\n              var user = getUser();\r\n              user.CambioPassObligatorio = 0;\r\n              setUser(user);\r\n              setDone(true);\r\n            })          \r\n                .catch(function(error) {\r\n                  if (error.response == undefined)\r\n                    alert.show(\"\" + error);\r\n                  else\r\n                    alert.show(\"\" + error.response.data.error);\r\n                });\r\n      }\r\n\r\n      const formik = useFormik({\r\n        initialValues: {\r\n          actualPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmPassword: \"\",\r\n        },\r\n        validationSchema: validation,\r\n        onSubmit: (values) => {\r\n            cambiarContraseña();\r\n        },\r\n      });\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n            <Header/>\r\n            <Sidebar/>\r\n        </div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className='divPerfil'>\r\n              <div>\r\n                  <h1 className='ExpertaText'>Cambiar Contraseña</h1>\r\n              </div>\r\n              <Paper className='paperPerfil'>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel>Contraseña Actual</InputLabel>\r\n                <TextField\r\n                  onChange={formik.handleChange}\r\n                  className={classes.textField}\r\n                  style={{ marginBottom: \"2%\" }}\r\n                  placeholder=\"Ingresá tu contraseña actual\"\r\n                  //disabled={true}\r\n                  id=\"actualPassword\"\r\n                  name=\"actualPassword\"\r\n                  variant=\"outlined\"\r\n                  helperText= {formik.errors.actualPassword}\r\n                  error={formik.errors.actualPassword}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel>Contraseña Nueva</InputLabel>\r\n                <TextField\r\n                  onChange={formik.handleChange}\r\n                  className={classes.textField}\r\n                  style={{ marginBottom: \"2%\" }}\r\n                  placeholder=\"Ingresá la contraseña nueva\"\r\n                  type=\"password\"\r\n                  //disabled={true}\r\n                  id=\"newPassword\"\r\n                  name=\"newPassword\"\r\n                  variant=\"outlined\"\r\n                  helperText= {formik.errors.newPassword}\r\n                  error={formik.errors.newPassword}\r\n                />\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel>Confirmar Contraseña</InputLabel>\r\n                <TextField\r\n                  onChange={formik.handleChange}\r\n                  className={classes.textField}\r\n                  style={{ marginBottom: \"2%\" }}\r\n                  placeholder=\"Ingresá la misma contraseña\"\r\n                  type=\"password\"\r\n                  //disabled={true}\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  variant=\"outlined\"\r\n                  helperText= {formik.errors.confirmPassword}\r\n                  error={formik.errors.confirmPassword}\r\n                />\r\n              </FormControl>\r\n                  <div>\r\n                      <Button\r\n                      className={classes.btn}\r\n                      variant=\"contained\"\r\n                      type= 'submit'>Confirmar</Button>\r\n                  </div>\r\n              </Paper>\r\n          </div>\r\n        </form>\r\n        { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contrasena;","C:\\Repo\\SafeDeskWeb\\src\\components\\Reserva.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setMinutes, getDay, addDays, formatISO } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useAlert } from 'react-alert';\r\nimport swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Zoom,\r\n  } from \"@material-ui/core\";\r\n\r\nimport Header from '../shared/Header';\r\nimport Sidebar from './Sidebar2';\r\nimport { getEdificios, getPisos, getHoras, saveTurno } from '../apis/TurnosAPI';\r\nimport { getUsuariosDependientes } from '../apis/UsuariosAPI';\r\nimport { getUserDiagnostico } from '../apis/DiagnosticosAPI';\r\n\r\nconst isWeekday = (date) => {\r\n    const day = getDay(date);\r\n    return day !== 0 && day !== 6;\r\n  };\r\n\r\n//en este metodo se envia la fecha a la base para recuperar el resto de los datos\r\nconst Reserva = () => {\r\n    const [submit, setSubmit] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [feriados, setFeriados] = useState([]);\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [edificios, setEdificios] = useState([]);\r\n    const [pisos, setPisos] = useState([]);\r\n    const [horarios, setHorarios] = useState([]);\r\n    const [fechaSel, setFechaSel] = useState();\r\n    const alert = useAlert();\r\n    const [done, setDone] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [cupoE, setCupoE] = useState(0);\r\n    const [cupoP, setCupoP] = useState(0);\r\n    const [cupoH, setCupoH] = useState(0);\r\n\r\n    /*const useStyles = makeStyles((theme) => ({\r\n      formControl: {\r\n        width: \"100%\",\r\n      },\r\n      textField: {\r\n        marginTop: theme.spacing(6),\r\n      },\r\n      form: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n      }\r\n    }));\r\n    const classes = useStyles();*/\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          fecha: \"\",\r\n          usuario: \"\",\r\n          edificio: \"\",\r\n          piso: \"\",\r\n          hora: \"\",\r\n        },\r\n        onSubmit: (values) => {\r\n          const { fecha, usuario, edificio, piso, hora } = values;\r\n          setLoading(true);\r\n          guardarReserva(usuario, fechaSel, piso, edificio, hora);\r\n          setDone(true);\r\n        },\r\n      });\r\n\r\n      async function handleDateChange(date) {\r\n        resetValues();\r\n        const fechaAux = formatISO(new Date(`${date}`), {\r\n          representation: \"date\",\r\n        });\r\n        setFechaSel(fechaAux);\r\n        const res = await getEdificios(fechaAux);\r\n        setEdificios(res.data);\r\n        setLoading(false);\r\n      }\r\n\r\n      async function handleEdificiosChange(idEdificio) {\r\n        if (idEdificio)\r\n        {\r\n          const res = await getPisos(idEdificio,fechaSel);\r\n          setPisos(res.data);\r\n          const res2 = await getHoras(idEdificio,fechaSel);\r\n          setHorarios(res2.data);\r\n          setCupoEdificio(idEdificio);\r\n          setLoading(false);\r\n        }\r\n      }\r\n\r\n\r\n      const guardarReserva = (idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada) => {\r\n\r\n        saveTurno(idUsuario, FechaTurno, IdPiso, IdEdificio, idHorarioEntrada)\r\n            .then(response => {\r\n              alert.show(\"Reserva grabada correctamente!\");\r\n              setDone(true);\r\n              setLoading(false);\r\n            })          \r\n                .catch(function(error) {\r\n                  if (error.response == undefined)\r\n                    alert.show(\"\" + error);\r\n                  else\r\n                    alert.show(\"\" + error.response.data.error);\r\n                });\r\n    };\r\n\r\n      function populateFeriados(holiday) {\r\n        const feriadoData = [];\r\n        if (holiday) {\r\n          for (let a = 0; a < holiday.length; a++) {\r\n            const day = holiday[a].fecha.replace(/-/g, \"/\");\r\n            feriadoData.push(new Date(day));\r\n          }\r\n        }\r\n        return feriadoData;\r\n      }\r\n\r\n      async function cargarUsuarios() {\r\n        setLoading(true);\r\n        const res = await getUsuariosDependientes();\r\n        setUsuarios(res.data);\r\n        setLoading(false);\r\n      }\r\n\r\n      const isDiagActive = () => {\r\n\r\n        getUserDiagnostico().then(response => {\r\n        if (!response.data){\r\n            swal\r\n            .fire({\r\n              title: \"Advertencia\",\r\n              text: \"Debe realizar el autodiagóstico para poder reservar un turno.\",\r\n              icon: \"warning\",\r\n              confirmButtonColor: \"#009bdb\",\r\n              confirmButtonText: \"OK\",\r\n              animation: true,\r\n            })\r\n            .then((result) => {\r\n              if (result.value) { \r\n                window.location.replace(\"/Diagnostico\");\r\n              }\r\n            });\r\n          }\r\n        })          \r\n        .catch(function(error) {\r\n              if (error.response == undefined)\r\n                alert.show(\"\" + error);\r\n              else\r\n                alert.show(\"\" + error.response.data.error);\r\n        });\r\n        \r\n      }\r\n\r\n      useEffect(() => {\r\n          /*setWidthText(width > 1023 ? \"40%\" : \"60%\");\r\n          setMarginTop(width > 1023 ? \"2%\" : \"8%\");\r\n          setWidthh(width > 1023 ? \"50%\" : \"85%\");*/\r\n          isDiagActive();\r\n        cargarUsuarios();\r\n        const defaultSelFecha = [{ eID : 0, Nombre: 'Seleccionar Fecha', Direccion: '' }]\r\n        setEdificios(defaultSelFecha);\r\n        const defaultSelEdificio = [{ pID : 0, Nombre: 'Seleccionar Edificio',id : 0, horario: 'Seleccionar Edificio' }]\r\n        setHorarios(defaultSelEdificio);\r\n        setPisos(defaultSelEdificio);  \r\n      }, /*[width]*/[]);\r\n\r\n      const handleSubmit = () => {\r\n          setSubmit(true);\r\n      }\r\n\r\n \r\n      const setCupoEdificio = (value) => {\r\n        edificios.map((edificio) => {\r\n          if(edificio.eID === value){\r\n            setCupoE(edificio.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const setCupoPiso = (value) => {\r\n        pisos.map((piso) => {\r\n          if(piso.pID === value){\r\n            setCupoP(piso.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const setCupoHorario = (value) => {\r\n        horarios.map((hora) => {\r\n          if(hora.id === value){\r\n            setCupoH(hora.Cupo);\r\n          }\r\n        })\r\n      }\r\n\r\n      const resetValues = () => {\r\n        formik.values.edificio = \"\";\r\n        formik.values.usuario = \"\";\r\n        formik.values.piso = \"\";\r\n        formik.values.hora = \"\";\r\n        setSubmit(false);\r\n      };\r\n\r\n\r\n    return (\r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n\r\n      {loading ? (\r\n      <Container maxWidth=\"sm\">\r\n        <ReactLoading type={\"spin\"} color={\"#fff\"} height={'50px'} width={'50px'}/>\r\n      </Container>\r\n      ) : ( \r\n      <div>\r\n        <br/>\r\n        <Container maxWidth=\"sm\">\r\n        <h1 className='ExpertaText'>Reserva tu Turno</h1>\r\n        <p >Selecciona una fecha y un sitio para reservar!</p>\r\n        <br/>\r\n        <form onSubmit={formik.handleSubmit}\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n            }}>\r\n                <FormControl style={{ alignSelf: \"center\" }}>\r\n                  <InputLabel>Elegí la fecha</InputLabel>\r\n                    <div id=\"datePicker\">\r\n                      <DatePicker\r\n                        style={{\r\n                          marginTop: \"10%\",\r\n                          marginRight: \"10%\",\r\n                          width: \"50%\",\r\n                          alignSelf: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        id=\"fecha\"\r\n                        locale=\"es\"\r\n                        selected={formik.values.fecha}\r\n                        name=\"fecha\"\r\n                        placeholderText=\"Elegí la fecha\"\r\n                        onChange={(date) => handleDateChange(date)}\r\n                        dateFormat=\"MMMM d, yyyy\"\r\n                        filterDate={isWeekday}\r\n                        minDate={setMinutes(addDays(new Date(), 1), 30)}\r\n                        maxDate={setMinutes(addDays(new Date(), 30), 30)}\r\n                        showDisabledMonthNavigation\r\n                        inline={formik.values.sucursalId !== \"\"}\r\n                        excludeDates={populateFeriados(feriados)}\r\n                      />\r\n                    </div>\r\n                  </FormControl>\r\n\r\n                    <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el sitio</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"edificio\"\r\n                        name=\"edificio\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"50\",\r\n                        }}\r\n                        value={formik.values.edificio}\r\n                        onChange={(e) => {\r\n                          formik.handleChange(e);\r\n                          handleEdificiosChange(e.target.value);\r\n                        }}\r\n                    >\r\n                        {edificios &&\r\n                        edificios.map((edificio) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`edificio_${edificio.eID}`}\r\n                            value={edificio.eID}\r\n                            >\r\n                                {edificio.Nombre} - {edificio.Direccion} \r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {cupoE != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoE}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n\r\n                  <FormControl\r\n                    style={{\r\n                        marginTop: \"3%\",\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                    >\r\n                    <InputLabel>\r\n                        <b>Elegí el colaborador</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"usuario\"\r\n                        name=\"usuario\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.usuario}\r\n                    >\r\n                        {usuarios &&\r\n                        usuarios.map((usuario) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`usuario_${usuario.dni}`}\r\n                            value={usuario.dni}\r\n                            >\r\n                                {usuario.nombre}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    </FormControl>\r\n\r\n                  <FormControl\r\n                style={{\r\n                    marginTop: \"3%\",\r\n                    alignSelf: \"center\",\r\n                }}\r\n                >\r\n                <InputLabel>\r\n                    <b>Elegí el piso</b>\r\n                </InputLabel>\r\n                <Select\r\n                    id=\"piso\"\r\n                    name=\"piso\"\r\n                    required\r\n                    style={{\r\n                    marginBottom: \"15px\",\r\n                    minWidth: \"150\",\r\n                    }}\r\n                    onChange={(e) => {\r\n                      formik.handleChange(e);\r\n                      setCupoPiso(e.target.value);\r\n                    }}\r\n                    value={formik.values.piso}\r\n                >\r\n                    {pisos &&\r\n                    pisos.map((piso) => (\r\n                        <MenuItem\r\n                        style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                        key={`piso_${piso.pID}`}\r\n                        value={piso.pID}\r\n                        >\r\n                            {piso.Nombre}\r\n                        </MenuItem>\r\n\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {cupoP != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoP}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n\r\n                <FormControl\r\n                    style={{\r\n                      marginTop: \"3%\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    <InputLabel>\r\n                        <b>Elegí el horario</b>\r\n                    </InputLabel>\r\n                    <Select\r\n                        id=\"hora\"\r\n                        name=\"hora\"\r\n                        required\r\n                        style={{\r\n                        marginBottom: \"15px\",\r\n                        minWidth: \"150\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          formik.handleChange(e);\r\n                          setCupoHorario(e.target.value);\r\n                        }}\r\n                        value={formik.values.hora}\r\n                    >\r\n                        {horarios &&\r\n                        horarios.map((hora) => (\r\n                            <MenuItem\r\n                            style={{ fontSize: \"11pt\", fontFamily: \"Armata\" }}\r\n                            key={`hora_${hora.id}`}\r\n                            value={hora.id}\r\n                            onClick={handleSubmit}\r\n                            >\r\n                              {hora.horario}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {cupoH != null && (\r\n                    <InputLabel style={{fontSize: \"10pt\", textAlign : \"right\",color: \"rgb(63, 80, 97)\"}}>\r\n                      <b>{`Cupo: ${cupoH}`}</b>\r\n                    </InputLabel>\r\n                  )}\r\n                <div style={{ marginTop: \"3%\", alignSelf: \"center\" }}>  \r\n                {submit == true && (\r\n                  <Button\r\n                  style={{ alignSelf: \"center\" ,textTransform: \"none\", textAlign: \"center\", backgroundColor: \"#0F1150\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  type= 'submit'>Confirmar</Button>\r\n                )}     \r\n                </div>   \r\n            </form>\r\n        </Container>\r\n      </div>)}\r\n      <br/>\r\n      { done ? <Redirect to=\"/Home\"/> : null }\r\n    </div>\r\n    );\r\n}\r\nexport default Reserva;","C:\\Repo\\SafeDeskWeb\\src\\index.js",[],"C:\\Repo\\SafeDeskWeb\\src\\apis\\api.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\Reporte.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"C:\\Repo\\SafeDeskWeb\\src\\utils\\auth-helper.js",["176"],"import Axios from \"axios\";\r\nimport * as gVar from \"../utils/properties\";\r\nimport React from 'react';\r\n\r\nconst TOKEN_KEY = \"SxnL\";\r\nconst USER_KEY = \"User\";\r\n\r\n//Logout\r\nexport function logoutUser() {\r\n  localStorage.removeItem(USER_KEY);\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function setToken(token) {\r\n  localStorage.setItem(TOKEN_KEY, token)\r\n}\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function setUser(user) {\r\n  //convierto a json el response del objeto\r\n  localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n}\r\n\r\nexport function getUser() {\r\n  //esto era lo pase json asi que lo vuelvo a obj\r\n  var retrievedObject = localStorage.getItem(USER_KEY);\r\n  return JSON.parse(retrievedObject)\r\n}\r\n\r\nexport async function getCurrentUser() {\r\n  if (!getToken()) return false;\r\n  try {\r\n    let response = await Axios.get(gVar.api + \"/api/logged/current\");\r\n    return response.data;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/*export function initAxiosInterceptors() {\r\n  Axios.interceptors.request.use(config => {\r\n    const token = getToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n  });\r\n\r\n  Axios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      if (error.response.status === 401) {\r\n        //deleteToken();\r\n        window.location = \"/\";\r\n      } else {\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n  );\r\n}*/\r\n","C:\\Repo\\SafeDeskWeb\\src\\apis\\AuthAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\shared\\Header.js",["177","178"],"C:\\Repo\\SafeDeskWeb\\src\\apis\\TurnosAPI.js",[],"C:\\Repo\\SafeDeskWeb\\src\\components\\SidebarData.js",["179","180","181","182","183","184","185","186","187"],{"ruleId":"188","severity":1,"message":"189","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"192","line":3,"column":19,"nodeType":"190","messageId":"191","endLine":3,"endColumn":31},{"ruleId":"193","severity":1,"message":"194","line":32,"column":6,"nodeType":"195","endLine":32,"endColumn":8,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":62,"column":26,"nodeType":"199","messageId":"200","endLine":62,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":71,"column":20,"nodeType":"199","messageId":"200","endLine":71,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":104,"column":15,"nodeType":"199","messageId":"200","endLine":104,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":104,"column":64,"nodeType":"199","messageId":"200","endLine":104,"endColumn":66},{"ruleId":"197","severity":1,"message":"198","line":115,"column":26,"nodeType":"199","messageId":"200","endLine":115,"endColumn":28},{"ruleId":"188","severity":1,"message":"201","line":3,"column":17,"nodeType":"190","messageId":"191","endLine":3,"endColumn":26},{"ruleId":"188","severity":1,"message":"202","line":3,"column":28,"nodeType":"190","messageId":"191","endLine":3,"endColumn":37},{"ruleId":"188","severity":1,"message":"203","line":3,"column":39,"nodeType":"190","messageId":"191","endLine":3,"endColumn":47},{"ruleId":"188","severity":1,"message":"204","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":18},{"ruleId":"188","severity":1,"message":"205","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":20},{"ruleId":"188","severity":1,"message":"206","line":8,"column":22,"nodeType":"190","messageId":"191","endLine":8,"endColumn":26},{"ruleId":"188","severity":1,"message":"207","line":8,"column":28,"nodeType":"190","messageId":"191","endLine":8,"endColumn":36},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"212","line":4,"column":73,"nodeType":"190","messageId":"191","endLine":4,"endColumn":87},{"ruleId":"193","severity":1,"message":"213","line":29,"column":6,"nodeType":"195","endLine":29,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":34,"column":5,"nodeType":"217","messageId":"218","endLine":41,"endColumn":6},{"ruleId":"197","severity":1,"message":"198","line":48,"column":50,"nodeType":"199","messageId":"200","endLine":48,"endColumn":52},{"ruleId":"197","severity":1,"message":"198","line":52,"column":26,"nodeType":"199","messageId":"200","endLine":52,"endColumn":28},{"ruleId":"188","severity":1,"message":"219","line":70,"column":10,"nodeType":"190","messageId":"191","endLine":70,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":86,"column":34,"nodeType":"199","messageId":"200","endLine":86,"endColumn":36},{"ruleId":"188","severity":1,"message":"220","line":99,"column":15,"nodeType":"190","messageId":"191","endLine":99,"endColumn":27},{"ruleId":"188","severity":1,"message":"221","line":99,"column":28,"nodeType":"190","messageId":"191","endLine":99,"endColumn":43},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"205","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":20},{"ruleId":"188","severity":1,"message":"206","line":9,"column":22,"nodeType":"190","messageId":"191","endLine":9,"endColumn":26},{"ruleId":"188","severity":1,"message":"222","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":13},{"ruleId":"188","severity":1,"message":"223","line":12,"column":13,"nodeType":"190","messageId":"191","endLine":12,"endColumn":17},{"ruleId":"188","severity":1,"message":"224","line":13,"column":8,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"225","line":22,"column":10,"nodeType":"190","messageId":"191","endLine":22,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":69,"column":26,"nodeType":"199","messageId":"200","endLine":69,"endColumn":28},{"ruleId":"208","replacedBy":"226"},{"ruleId":"210","replacedBy":"227"},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"202","line":1,"column":28,"nodeType":"190","messageId":"191","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"205","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":20},{"ruleId":"188","severity":1,"message":"206","line":2,"column":22,"nodeType":"190","messageId":"191","endLine":2,"endColumn":26},{"ruleId":"215","severity":1,"message":"216","line":59,"column":5,"nodeType":"217","messageId":"218","endLine":90,"endColumn":6},{"ruleId":"197","severity":1,"message":"198","line":105,"column":36,"nodeType":"199","messageId":"200","endLine":105,"endColumn":38},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"203","line":1,"column":39,"nodeType":"190","messageId":"191","endLine":1,"endColumn":47},{"ruleId":"188","severity":1,"message":"228","line":5,"column":21,"nodeType":"190","messageId":"191","endLine":5,"endColumn":29},{"ruleId":"188","severity":1,"message":"229","line":5,"column":31,"nodeType":"190","messageId":"191","endLine":5,"endColumn":42},{"ruleId":"188","severity":1,"message":"230","line":5,"column":44,"nodeType":"190","messageId":"191","endLine":5,"endColumn":53},{"ruleId":"188","severity":1,"message":"231","line":5,"column":55,"nodeType":"190","messageId":"191","endLine":5,"endColumn":71},{"ruleId":"188","severity":1,"message":"212","line":5,"column":73,"nodeType":"190","messageId":"191","endLine":5,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":14,"column":41,"nodeType":"199","messageId":"200","endLine":14,"endColumn":43},{"ruleId":"188","severity":1,"message":"201","line":3,"column":17,"nodeType":"190","messageId":"191","endLine":3,"endColumn":26},{"ruleId":"188","severity":1,"message":"202","line":3,"column":28,"nodeType":"190","messageId":"191","endLine":3,"endColumn":37},{"ruleId":"188","severity":1,"message":"205","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":20},{"ruleId":"188","severity":1,"message":"206","line":4,"column":22,"nodeType":"190","messageId":"191","endLine":4,"endColumn":26},{"ruleId":"188","severity":1,"message":"232","line":11,"column":46,"nodeType":"190","messageId":"191","endLine":11,"endColumn":56},{"ruleId":"197","severity":1,"message":"198","line":60,"column":38,"nodeType":"199","messageId":"200","endLine":60,"endColumn":40},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"205","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":20},{"ruleId":"188","severity":1,"message":"206","line":2,"column":22,"nodeType":"190","messageId":"191","endLine":2,"endColumn":26},{"ruleId":"188","severity":1,"message":"233","line":3,"column":22,"nodeType":"190","messageId":"191","endLine":3,"endColumn":36},{"ruleId":"188","severity":1,"message":"234","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":20},{"ruleId":"188","severity":1,"message":"235","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":12},{"ruleId":"188","severity":1,"message":"236","line":12,"column":13,"nodeType":"190","messageId":"191","endLine":12,"endColumn":16},{"ruleId":"188","severity":1,"message":"237","line":21,"column":5,"nodeType":"190","messageId":"191","endLine":21,"endColumn":9},{"ruleId":"188","severity":1,"message":"238","line":38,"column":12,"nodeType":"190","messageId":"191","endLine":38,"endColumn":17},{"ruleId":"188","severity":1,"message":"239","line":38,"column":19,"nodeType":"190","messageId":"191","endLine":38,"endColumn":27},{"ruleId":"188","severity":1,"message":"240","line":39,"column":22,"nodeType":"190","messageId":"191","endLine":39,"endColumn":33},{"ruleId":"188","severity":1,"message":"241","line":76,"column":19,"nodeType":"190","messageId":"191","endLine":76,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":116,"column":38,"nodeType":"199","messageId":"200","endLine":116,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":162,"column":34,"nodeType":"199","messageId":"200","endLine":162,"endColumn":36},{"ruleId":"193","severity":1,"message":"242","line":181,"column":21,"nodeType":"195","endLine":181,"endColumn":23,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":189,"column":34,"nodeType":"246","messageId":"247","endLine":189,"endColumn":36},{"ruleId":"244","severity":1,"message":"245","line":197,"column":26,"nodeType":"246","messageId":"247","endLine":197,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":205,"column":29,"nodeType":"246","messageId":"247","endLine":205,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":429,"column":25,"nodeType":"199","messageId":"200","endLine":429,"endColumn":27},{"ruleId":"188","severity":1,"message":"201","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"233","line":5,"column":22,"nodeType":"190","messageId":"191","endLine":5,"endColumn":36},{"ruleId":"188","severity":1,"message":"234","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":20},{"ruleId":"188","severity":1,"message":"237","line":19,"column":5,"nodeType":"190","messageId":"191","endLine":19,"endColumn":9},{"ruleId":"188","severity":1,"message":"248","line":23,"column":46,"nodeType":"190","messageId":"191","endLine":23,"endColumn":55},{"ruleId":"188","severity":1,"message":"249","line":33,"column":10,"nodeType":"190","messageId":"191","endLine":33,"endColumn":16},{"ruleId":"188","severity":1,"message":"250","line":33,"column":18,"nodeType":"190","messageId":"191","endLine":33,"endColumn":27},{"ruleId":"188","severity":1,"message":"240","line":35,"column":20,"nodeType":"190","messageId":"191","endLine":35,"endColumn":31},{"ruleId":"188","severity":1,"message":"219","line":44,"column":10,"nodeType":"190","messageId":"191","endLine":44,"endColumn":14},{"ruleId":"188","severity":1,"message":"251","line":44,"column":16,"nodeType":"190","messageId":"191","endLine":44,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":59,"column":26,"nodeType":"199","messageId":"200","endLine":59,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":71,"column":25,"nodeType":"199","messageId":"200","endLine":71,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":83,"column":26,"nodeType":"199","messageId":"200","endLine":83,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":98,"column":28,"nodeType":"246","messageId":"247","endLine":98,"endColumn":30},{"ruleId":"197","severity":1,"message":"198","line":149,"column":20,"nodeType":"199","messageId":"200","endLine":149,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":152,"column":32,"nodeType":"199","messageId":"200","endLine":152,"endColumn":34},{"ruleId":"197","severity":1,"message":"198","line":154,"column":25,"nodeType":"199","messageId":"200","endLine":154,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":162,"column":30,"nodeType":"199","messageId":"200","endLine":162,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":200,"column":28,"nodeType":"199","messageId":"200","endLine":200,"endColumn":30},{"ruleId":"197","severity":1,"message":"198","line":220,"column":22,"nodeType":"199","messageId":"200","endLine":220,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":235,"column":27,"nodeType":"199","messageId":"200","endLine":235,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":384,"column":42,"nodeType":"199","messageId":"200","endLine":384,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":422,"column":45,"nodeType":"199","messageId":"200","endLine":422,"endColumn":47},{"ruleId":"197","severity":1,"message":"198","line":458,"column":46,"nodeType":"199","messageId":"200","endLine":458,"endColumn":48},{"ruleId":"197","severity":1,"message":"198","line":496,"column":40,"nodeType":"199","messageId":"200","endLine":496,"endColumn":42},{"ruleId":"197","severity":1,"message":"198","line":535,"column":47,"nodeType":"199","messageId":"200","endLine":535,"endColumn":49},{"ruleId":"188","severity":1,"message":"252","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":13},{"ruleId":"188","severity":1,"message":"203","line":2,"column":17,"nodeType":"190","messageId":"191","endLine":2,"endColumn":25},{"ruleId":"188","severity":1,"message":"202","line":2,"column":27,"nodeType":"190","messageId":"191","endLine":2,"endColumn":36},{"ruleId":"188","severity":1,"message":"253","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":68,"column":33,"nodeType":"199","messageId":"200","endLine":68,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":69,"column":31,"nodeType":"199","messageId":"200","endLine":69,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":74,"column":33,"nodeType":"199","messageId":"200","endLine":74,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":75,"column":31,"nodeType":"199","messageId":"200","endLine":75,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":81,"column":33,"nodeType":"199","messageId":"200","endLine":81,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":82,"column":31,"nodeType":"199","messageId":"200","endLine":82,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":89,"column":33,"nodeType":"199","messageId":"200","endLine":89,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":90,"column":31,"nodeType":"199","messageId":"200","endLine":90,"endColumn":33},"no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","'ListItemText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTurnosActivos' and 'getTurnosHistorico'. Either include them or remove the dependency array.","ArrayExpression",["254"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useAlert' is defined but never used.","'withRouter' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'FormHelperText' is defined but never used.","React Hook useEffect has a missing dependency: 'getConfig'. Either include it or remove the dependency array.",["257"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'done' is assigned a value but never used.","'reservaTurno' is assigned a value but never used.","'autoDiagnostico' is assigned a value but never used.","'axios' is defined but never used.","'gVar' is defined but never used.","'Home' is defined but never used.","'cargando' is assigned a value but never used.",["255"],["256"],"'Checkbox' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Typography' is defined but never used.","'registerLocale' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","'Yup' is defined but never used.","'Zoom' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setFeriados' is assigned a value but never used.","'fecha' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isDiagActive'. Either include it or remove the dependency array.",["258"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'saveTurno' is defined but never used.","'submit' is assigned a value but never used.","'setSubmit' is assigned a value but never used.","'setDone' is assigned a value but never used.","'React' is defined but never used.","'SwitchVideoTwoTone' is defined but never used.",{"desc":"259","fix":"260"},"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [getTurnosActivos, getTurnosHistorico]",{"range":"265","text":"266"},"Update the dependencies array to be: [getConfig]",{"range":"267","text":"268"},"Update the dependencies array to be: [isDiagActive]",{"range":"269","text":"270"},[1094,1096],"[getTurnosActivos, getTurnosHistorico]",[1028,1030],"[getConfig]",[6039,6041],"[isDiagActive]"]